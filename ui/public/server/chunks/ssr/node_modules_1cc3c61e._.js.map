{"version":3,"sources":["turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/timeoutManager.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/utils.js","turbopack:///[project]/node_modules/@tanstack/query-core/src/notifyManager.ts","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/subscribable.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/focusManager.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/query.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/onlineManager.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/removable.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/retryer.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/thenable.js","turbopack:///[project]/node_modules/@tanstack/query-core/src/mutation.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts","turbopack:///[project]/node_modules/@tanstack/react-query/src/QueryClientProvider.tsx","turbopack:///[project]/node_modules/wagmi/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","turbopack:///[project]/node_modules/wagmi/node_modules/use-sync-external-store/shim/index.js","turbopack:///[project]/node_modules/wagmi/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","turbopack:///[project]/node_modules/wagmi/node_modules/use-sync-external-store/shim/with-selector.js","turbopack:///[project]/node_modules/@tanstack/query-core/src/queryObserver.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/infiniteQueryObserver.ts","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/useQuery.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/suspense.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/mutationObserver.js","turbopack:///[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js","../../../src/actions/getChainId.ts","../../../src/actions/watchChainId.ts","../../../src/hooks/useBalance.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/mutationObserver.ts","../../../src/hooks/useChainId.ts","../../../src/utils/query.ts","turbopack:///[project]/node_modules/@tanstack/react-query/src/useMutation.ts","turbopack:///[project]/node_modules/next/src/client/components/router-reducer/router-reducer-types.ts","turbopack:///[project]/node_modules/next/src/shared/lib/is-thenable.ts","turbopack:///[project]/node_modules/next/src/client/components/use-action-queue.ts","turbopack:///[project]/node_modules/next/src/client/app-call-server.ts","turbopack:///[project]/node_modules/next/src/client/app-find-source-map-url.ts"],"sourcesContent":["// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// TYPES\n\nimport { systemSetTimeoutZero } from './timeoutManager'\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = systemSetTimeoutZero\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TContext> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TContext>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  readonly mutationId: number\n\n  #observers: Array<MutationObserver<TData, TError, TVariables, TContext>>\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const onContinue = () => {\n      this.#dispatch({ type: 'continue' })\n    }\n\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n        return this.options.mutationFn(variables)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (restored) {\n        // Dispatch continue action to unpause restored mutation\n        onContinue()\n      } else {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(variables)\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(data, variables, this.state.context!)\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(data, null, variables, this.state.context)\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n","import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const createQueryFnContext = () => {\n            const queryFnContext: OmitKeyof<\n              QueryFunctionContext<QueryKey, unknown>,\n              'signal'\n            > = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? 'backward' : 'forward',\n              meta: context.options.meta,\n            }\n            addSignalProperty(queryFnContext)\n            return queryFnContext as QueryFunctionContext<QueryKey, unknown>\n          }\n\n          const queryFnContext = createQueryFnContext()\n\n          const page = await queryFn(queryFnContext)\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { focusManager } from './focusManager'\nimport { notifyManager } from './notifyManager'\nimport { fetchState } from './query'\nimport { Subscribable } from './subscribable'\nimport { pendingThenable } from './thenable'\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { timeoutManager } from './timeoutManager'\nimport type { ManagedTimerId } from './timeoutManager'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { PendingThenable, Thenable } from './thenable'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\ninterface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #currentThenable: Thenable<TData>\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ManagedTimerId\n  #refetchIntervalId?: ManagedTimerId\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.#currentThenable = pendingThenable()\n\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult()\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key as keyof QueryObserverResult)\n        onPropTracked?.(key as keyof QueryObserverResult)\n        if (\n          key === 'promise' &&\n          !this.options.experimental_prefetchInRender &&\n          this.#currentThenable.status === 'pending'\n        ) {\n          this.#currentThenable.reject(\n            new Error(\n              'experimental_prefetchInRender feature flag is not enabled',\n            ),\n          )\n        }\n        return Reflect.get(target, key)\n      },\n    })\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Per default, use query data\n    data = newState.data as unknown as TData\n    let skipSelect = false\n\n    // use placeholderData if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n        // we have to skip select when reading this memoization\n        // because prevResult.data is already \"selected\"\n        skipSelect = true\n      } else {\n        // compute placeholderData\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    // Select data if needed\n    // this also runs placeholderData through the select function\n    if (options.select && data !== undefined && !skipSelect) {\n      // Memoize select result\n      if (\n        prevResult &&\n        data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(data as any)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false,\n    }\n\n    const nextResult = result as QueryObserverResult<TData, TError>\n\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable: PendingThenable<TData>) => {\n        if (nextResult.status === 'error') {\n          thenable.reject(nextResult.error)\n        } else if (nextResult.data !== undefined) {\n          thenable.resolve(nextResult.data)\n        }\n      }\n\n      /**\n       * Create a new thenable and result promise when the results have changed\n       */\n      const recreateThenable = () => {\n        const pending =\n          (this.#currentThenable =\n          nextResult.promise =\n            pendingThenable())\n\n        finalizeThenableIfPossible(pending)\n      }\n\n      const prevThenable = this.#currentThenable\n      switch (prevThenable.status) {\n        case 'pending':\n          // Finalize the previous thenable if it was pending\n          // and we are still observing the same query\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable)\n          }\n          break\n        case 'fulfilled':\n          if (\n            nextResult.status === 'error' ||\n            nextResult.data !== prevThenable.value\n          ) {\n            recreateThenable()\n          }\n          break\n        case 'rejected':\n          if (\n            nextResult.status !== 'error' ||\n            nextResult.error !== prevThenable.reason\n          ) {\n            recreateThenable()\n          }\n          break\n      }\n    }\n\n    return nextResult\n  }\n\n  updateResult(): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    this.#notify({ listeners: shouldNotifyListeners() })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: { listeners: boolean }): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (\n    resolveEnabled(options.enabled, query) !== false &&\n    resolveStaleTime(options.staleTime, query) !== 'static'\n  ) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n","import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type { Subscribable } from './subscribable'\nimport type {\n  DefaultError,\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverBaseResult,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  TData,\n  InfiniteData<TQueryFnData, TPageParam>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: Subscribable<\n    InfiniteQueryObserverListener<TData, TError>\n  >['subscribe']\n\n  // Type override\n  getCurrentResult!: ReplaceReturnType<\n    QueryObserver<\n      TQueryFnData,\n      TError,\n      TData,\n      InfiniteData<TQueryFnData, TPageParam>,\n      TQueryKey\n    >['getCurrentResult'],\n    InfiniteQueryObserverResult<TData, TError>\n  >\n\n  // Type override\n  protected fetch!: ReplaceReturnType<\n    QueryObserver<\n      TQueryFnData,\n      TError,\n      TData,\n      InfiniteData<TQueryFnData, TPageParam>,\n      TQueryKey\n    >['fetch'],\n    Promise<InfiniteQueryObserverResult<TData, TError>>\n  >\n\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): void {\n    super.setOptions({\n      ...options,\n      behavior: infiniteQueryBehavior(),\n    })\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage(\n    options?: FetchNextPageOptions,\n  ): Promise<InfiniteQueryObserverResult<TData, TError>> {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward' },\n      },\n    })\n  }\n\n  fetchPreviousPage(\n    options?: FetchPreviousPageOptions,\n  ): Promise<InfiniteQueryObserverResult<TData, TError>> {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward' },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<\n      TQueryFnData,\n      TError,\n      InfiniteData<TQueryFnData, TPageParam>,\n      TQueryKey\n    >,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const parentResult = super.createResult(query, options)\n\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction\n\n    const isFetchNextPageError = isError && fetchDirection === 'forward'\n    const isFetchingNextPage = isFetching && fetchDirection === 'forward'\n\n    const isFetchPreviousPageError = isError && fetchDirection === 'backward'\n    const isFetchingPreviousPage = isFetching && fetchDirection === 'backward'\n\n    const result: InfiniteQueryObserverBaseResult<TData, TError> = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError:\n        isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n\n    return result as InfiniteQueryObserverResult<TData, TError>\n  }\n}\n\ntype ReplaceReturnType<\n  TFunction extends (...args: Array<any>) => unknown,\n  TReturn,\n> = (...args: Parameters<TFunction>) => TReturn\n","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map",null,null,null,"import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n",null,null,"'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  navigatedAt,\n  previousTree,\n  serverResponse,\n}: {\n  navigatedAt: number\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  navigatedAt: number\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import type { Dispatch } from 'react'\nimport React, { use } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport type { AppRouterActionQueue } from './app-router-instance'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\n\n// The app router state lives outside of React, so we can import the dispatch\n// method directly wherever we need it, rather than passing it around via props\n// or context.\nlet dispatch: Dispatch<ReducerActions> | null = null\n\nexport function dispatchAppRouterAction(action: ReducerActions) {\n  if (dispatch === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  dispatch(action)\n}\n\nexport function useActionQueue(\n  actionQueue: AppRouterActionQueue\n): AppRouterState {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n\n  // Because of a known issue that requires to decode Flight streams inside the\n  // render phase, we have to be a bit clever and assign the dispatch method to\n  // a module-level variable upon initialization. The useState hook in this\n  // module only exists to synchronize state that lives outside of React.\n  // Ideally, what we'd do instead is pass the state as a prop to root.render;\n  // this is conceptually how we're modeling the app router state, despite the\n  // weird implementation details.\n  if (process.env.NODE_ENV !== 'production') {\n    const { useAppDevRenderingIndicator } =\n      require('../../next-devtools/userspace/use-app-dev-rendering-indicator') as typeof import('../../next-devtools/userspace/use-app-dev-rendering-indicator')\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const appDevRenderingIndicator = useAppDevRenderingIndicator()\n\n    dispatch = (action: ReducerActions) => {\n      appDevRenderingIndicator(() => {\n        actionQueue.dispatch(action, setState)\n      })\n    }\n  } else {\n    dispatch = (action: ReducerActions) =>\n      actionQueue.dispatch(action, setState)\n  }\n\n  return isThenable(state) ? use(state) : state\n}\n","import { startTransition } from 'react'\nimport { ACTION_SERVER_ACTION } from './components/router-reducer/router-reducer-types'\nimport { dispatchAppRouterAction } from './components/use-action-queue'\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  return new Promise((resolve, reject) => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_SERVER_ACTION,\n        actionId,\n        actionArgs,\n        resolve,\n        reject,\n      })\n    })\n  })\n}\n","const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n"],"names":["queryFnContext","ACTION_HMR_REFRESH","ACTION_NAVIGATE","ACTION_PREFETCH","ACTION_REFRESH","ACTION_RESTORE","ACTION_SERVER_ACTION","ACTION_SERVER_PATCH","PrefetchCacheEntryStatus","PrefetchKind","isThenable","promise","then","dispatchAppRouterAction","useActionQueue","dispatch","action","Error","actionQueue","state","setState","React","useState","process","env","NODE_ENV","useAppDevRenderingIndicator","require","appDevRenderingIndicator","use","callServer","actionId","actionArgs","Promise","resolve","reject","startTransition","type","findSourceMapURL","basePath","__NEXT_ROUTER_BASEPATH","pathname","filename","startsWith","document","location","origin","includes","url","URL","searchParams","set","href","undefined"],"mappings":"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AA,CAAS,EAClB,EAAQ,oBAAA,GAAuB,CAAA,CAAM,CAAC,CAAA,CAAG,EAAO,CAAA,CAAW,CAAC,CAAA,CAAG,GAC/D,KAAA,CACN,CAF+E,AAOxE,SAAS,EACd,CAAA,CACA,CAAA,EACS,MACT,CAAI,CAAC,GACqC,EAD/B,CAAA,GACJ,EAAiB,EAAS,AADf,EAEpB,CAKO,CANgC,QAMvB,EACd,CAAA,CACA,CAAA,EACS,MACT,CAAI,CAAC,IAAQ,CAAC,EAAQ,oBAAA,CAAsB,CAAA,AACE,MAAvC,CAD4C,CACvB,EAAS,EACvC,EAD2C,mFChL3C,IAAA,EAAuB,EAAA,CAAA,CAAA,EAAX,MAuCR,EAAA,EAAA,CAvCmB,AAuCnB,CAAA,QAnCS,EAA2B,EAAA,aAAA,CACtC,KAAA,GAGW,EAAiB,AAAC,IAC7B,IAAM,EAAe,EAAA,IADsC,MACtC,CAAW,GAEhC,GAAI,EACF,OAAO,EAGT,CANkD,CAEjC,CAIb,CAAC,EACH,MADW,AACL,AAAI,MAAM,wDAAwD,EAG1E,OAAO,CACT,EAOa,EAAsB,CAAC,QAClC,CAAA,UACA,CAAA,CACF,IACQ,CAD2C,CAC3C,SAAA,CAAU,KACd,CADoB,CACb,KAAA,CAAM,EACN,KACL,CADW,CACJ,OAAA,CAAQ,CACjB,GACC,CAAC,EAAO,EAGT,CAAA,CAHQ,CAGR,EAAA,GAAA,EAAC,EAAmB,QAAA,CAAnB,CAA4B,MAAO,WACjC,CAAA,CACH,qF,I,E,E,C,C,Y,G,A,E,G,A,A,C,A,K,A,E,I,E,C,C,A,C,C,C,C,E,C,C,C,C,O,M,E,C,C,C,a,C,A,C,G,A,C,C,E,C,C,G,C,G,C,C,K,E,C,e,W,G,C,C,A,I,E,E,C,G,E,U,E,M,C,C,C,E,I,K,E,Q,E,C,C,M,E,C,kB,E,C,C,I,K,C,U,C,K,C,G,E,C,C,C,A,E,A,A,C,A,A,C,A,G,K,E,I,C,G,E,U,C,C,A,C,E,C,A,E,M,E,I,G,E,O,C,mB,C,A,C,A,A,K,C,C,A,I,E,C,C,C,A,C,G,G,C,C,E,G,E,I,A,C,C,M,K,C,A,C,A,C,E,Q,C,C,E,C,C,C,A,C,A,I,C,C,E,E,C,C,A,I,A,C,C,I,G,I,C,G,G,C,E,C,C,C,C,G,E,C,I,C,C,C,C,C,E,C,C,C,C,C,C,E,C,E,E,C,C,C,C,C,A,C,C,E,C,E,E,C,C,C,A,E,G,E,E,C,A,C,A,C,E,E,C,A,A,E,E,I,K,E,C,A,G,C,E,M,E,W,E,C,K,C,G,C,C,O,C,C,C,A,C,G,E,I,C,A,C,C,C,A,C,G,I,C,A,G,C,E,A,E,I,E,C,A,K,E,C,A,A,S,I,E,E,I,E,O,A,C,C,c,E,C,C,C,C,A,K,C,G,C,C,G,C,C,A,I,A,E,A,O,A,C,C,E,C,S,C,E,I,K,C,M,C,O,C,C,A,E,O,A,C,E,C,Q,C,E,I,K,C,M,C,M,C,C,A,E,O,A,C,E,C,Y,C,E,I,K,C,M,C,U,C,C,A,E,I,I,C,A,C,E,C,C,G,E,I,G,C,C,C,C,C,K,C,C,I,C,A,C,G,G,E,A,C,E,C,E,G,C,C,E,M,C,E,E,M,C,O,C,E,E,K,W,C,C,C,C,A,K,C,C,G,C,C,O,C,E,C,C,K,C,C,A,C,A,C,C,G,I,S,E,A,C,A,C,C,A,E,I,A,C,C,G,K,C,E,E,M,C,O,C,E,E,K,W,E,C,C,A,E,G,C,C,E,C,G,E,A,C,A,A,C,A,C,C,I,c,G,E,I,C,C,M,E,e,E,I,C,C,M,A,C,E,C,A,E,E,I,C,G,C,A,C,E,A,C,C,G,C,C,M,C,W,C,C,C,C,A,C,C,I,I,C,A,C,E,C,A,C,G,C,C,W,C,I,G,C,C,M,C,I,C,M,C,c,E,C,C,C,A,G,E,C,C,C,C,K,E,A,C,C,C,C,C,E,A,C,U,C,C,O,C,C,a,C,kB,G,C,C,C,U,A,C,C,C,C,U,C,C,E,C,C,A,A,C,A,C,E,E,C,Q,C,C,E,E,A,E,W,C,C,C,S,G,C,E,S,C,K,C,G,C,C,E,C,W,E,E,E,Q,C,K,C,G,K,E,K,C,C,I,C,A,C,E,A,C,A,C,E,G,E,O,C,C,C,C,C,M,C,E,C,G,E,C,C,C,C,E,C,E,U,E,E,W,C,A,C,G,G,C,C,E,I,E,c,C,A,C,a,G,O,A,E,Q,E,E,C,C,K,C,G,E,C,A,C,E,G,E,I,K,C,K,C,O,C,S,E,C,A,E,S,C,I,E,A,C,C,G,A,C,K,C,U,C,Q,C,A,I,I,E,I,G,C,C,A,C,E,I,G,C,C,G,C,C,C,C,E,C,C,G,C,A,C,A,C,A,C,A,E,I,K,G,E,C,O,A,C,A,C,C,I,C,C,C,C,I,C,C,C,C,I,C,C,A,C,C,G,C,G,C,C,C,C,E,E,C,A,I,I,C,I,E,C,G,C,I,C,I,A,E,Y,E,E,E,C,A,C,A,G,E,G,C,E,I,C,I,C,C,S,I,E,E,I,G,E,C,U,C,yB,C,G,E,E,C,C,C,C,C,I,C,U,C,K,C,G,E,E,E,C,C,C,A,C,A,A,A,M,A,C,A,C,E,K,E,A,C,A,C,C,A,C,C,A,C,A,E,G,A,C,C,O,E,A,E,I,A,E,E,C,A,C,E,C,A,C,C,E,C,C,C,U,C,I,G,C,C,A,C,C,C,A,C,A,C,E,G,C,S,C,E,E,kB,C,E,E,O,C,G,E,C,G,C,C,C,C,E,C,E,E,M,A,G,G,A,C,C,C,M,E,S,A,E,K,G,E,O,E,A,E,E,E,K,C,G,C,C,A,E,I,I,G,E,A,E,I,G,E,C,C,A,C,A,C,C,C,A,C,A,C,A,A,C,C,A,I,C,C,A,C,A,E,E,C,O,C,I,A,O,G,S,E,C,E,G,U,C,Q,C,C,C,A,K,M,E,G,C,S,A,E,C,C,E,C,E,E,a,A,E,E,Q,C,C,A,A,A,K,C,G,G,C,I,C,C,C,6C,M,E,C,C,C,C,E,C,C,O,C,A,E,E,G,E,C,M,K,C,G,C,G,C,C,G,C,C,G,G,C,E,G,C,E,C,E,E,M,C,I,C,A,G,C,C,A,E,A,C,E,G,O,A,C,C,A,E,E,G,E,C,M,C,A,O,O,I,c,S,C,W,Q,U,G,E,M,U,G,S,C,a,E,E,U,E,E,G,a,E,e,U,E,K,8B,E,U,Q,E,A,G,K,G,O,A,C,U,C,E,S,C,Y,C,C,C,C,c,E,G,a,E,gB,I,K,E,A,C,A,A,G,C,Y,C,M,C,Q,O,K,Q,C,C,G,K,G,O,C,S,C,G,O,E,C,W,E,E,G,S,E,E,E,Y,E,E,G,W,C,K,K,E,A,C,G,C,c,C,M,C,O,M,E,O,E,M,E,K,E,I,E,O,A,M,E,O,E,M,E,O,I,E,E,G,S,E,E,G,W,E,E,E,Y,E,K,I,E,A,C,A,A,C,E,S,C,C,C,K,C,G,C,C,M,M,C,E,C,E,A,C,A,gB,G,Q,E,O,C,C,C,I,E,E,G,C,C,G,A,Q,G,E,C,A,U,C,A,G,G,C,E,G,M,C,M,C,C,C,C,C,G,G,I,C,E,C,C,C,C,C,A,G,G,C,C,M,A,C,G,E,C,E,G,C,M,E,C,A,I,C,C,E,C,E,C,A,E,E,G,C,E,A,C,C,C,C,C,C,C,C,C,C,C,K,C,G,E,C,I,A,C,C,A,E,C,A,G,C,M,E,O,C,C,O,E,A,C,C,O,G,I,G,I,K,C,O,C,O,C,C,C,M,E,G,C,C,O,E,C,A,G,A,U,E,O,C,C,Q,E,E,Q,G,M,C,S,C,Q,C,O,E,Q,E,G,C,C,Q,E,C,A,I,E,E,I,C,I,C,C,C,C,A,G,C,E,E,E,A,C,G,A,C,G,M,C,I,C,C,C,C,M,C,M,G,C,C,E,C,C,E,A,C,E,C,I,C,E,C,M,C,G,G,C,E,C,C,C,C,C,C,O,E,G,A,C,A,C,C,E,C,E,C,A,E,E,A,C,I,E,C,A,C,C,A,C,C,G,G,C,E,C,C,E,C,A,C,C,A,E,C,A,C,O,E,G,C,G,C,C,A,O,C,E,C,E,C,A,E,C,A,C,A,A,K,I,E,C,A,C,A,A,C,E,G,U,C,C,C,C,C,O,E,S,C,C,G,C,C,G,E,C,A,C,I,M,C,C,C,C,A,I,C,K,K,C,C,G,E,C,C,C,A,A,C,C,Q,C,C,C,G,E,C,C,C,A,A,O,E,E,A,I,G,G,A,C,C,A,G,E,E,G,A,C,E,G,G,G,A,C,A,C,A,C,A,C,A,A,C,kIC/BJ,IAAI,EAAA,EAAA,CAAA,CAAA,QAIW,YAAe,OAAO,OAAO,EAAE,EAAG,OAAO,EAAE,CAC7C,EADgD,AAC1C,IAAjB,IAAyB,CACb,CAAZ,CAAkB,SAAS,CACT,CAAlB,CAAwB,eAAe,CACvB,CAAhB,CAAsB,aAAa,CA6CrC,EAAQ,oBAAoB,CAC1B,KAAK,IAAM,EAAM,oBAAoB,CAAG,EAAM,oBAAoB,CAVpE,EAUuE,OAV9D,AAAuB,CAAS,CAAE,CAAW,EACpD,OAAO,GACT,iCCtDE,EAAO,OAAO,CAAA,EAAA,CAAA,CAAA,uCCQhB,IAAI,EAAA,EAAA,CAAA,CAAA,QACF,EAAA,EAAA,CAAA,CAAA,QAIE,EAAW,YAAe,OAAO,OAAO,EAAE,CAAG,OAAO,EAAE,CAH1D,EAG6D,OAHpD,AAAG,CAAC,CAAE,CAAC,EACd,OAAQ,IAAM,IAAM,CAAD,GAAO,GAAK,EAAI,GAAM,GAAI,CAAC,EAAO,GAAM,GAAK,GAAM,CACxE,EAEE,EAAuB,EAAK,oBAAoB,CAChD,EAAS,EAAM,MAAM,CACrB,EAAY,EAAM,SAAS,CAC3B,EAAU,EAAM,OAAO,CACvB,EAAgB,EAAM,aAAa,AACrC,GAAQ,gCAAgC,CAAG,SACzC,CAAS,CACT,CAAW,CACX,CAAiB,CACjB,CAAQ,CACR,CAAO,EAEP,IAAI,EAAU,EAAO,MACrB,GAAI,OAAS,EAAQ,OAAO,CAAE,CAC5B,IAAI,EAAO,CAAE,SAAU,CAAC,EAAG,MAAO,IAAK,EACvC,EAAQ,OAAO,CAAG,CACpB,MAAO,EAAO,EAAQ,OAAO,CAyC7B,IAAI,EAAQ,EAAqB,EAAW,CAxC5C,EAAU,EACR,WACE,SAAS,EAAiB,CAAY,EACpC,GAAI,CAAC,EAAS,CAIZ,GAHA,EAAU,CAAC,EACX,EAAmB,EACnB,EAAe,EAAS,GACpB,KAAK,IAAM,GAAW,EAAK,QAAQ,CAAE,CACvC,IAAI,EAAmB,EAAK,KAAK,CACjC,GAAI,EAAQ,EAAkB,GAC5B,OAAQ,EAAoB,CAChC,CACA,OAAQ,EAAoB,CAC9B,CAEA,GADA,EAAmB,EACf,EAAS,EAAkB,GAAe,OAAO,EACrD,IAAI,EAAgB,EAAS,UAC7B,AAAI,KAAK,IAAM,GAAW,EAAQ,EAAkB,IAC1C,EAAmB,EAAe,CAAA,GAC5C,EAAmB,EADjB,AAEM,EAAoB,EAC9B,CACA,IACE,EACA,EAFE,EAAU,CAAC,EAGb,EACE,KAAK,IAAM,EAAoB,KAAO,EAC1C,MAAO,CACL,WACE,OAAO,EAAiB,IAC1B,EACA,OAAS,EACL,KAAK,EACL,WACE,OAAO,EAAiB,IAC1B,EAER,AADG,EAEH,CAAC,EAAa,EAAmB,EAAU,GAAQ,CAEF,CAAC,EAAE,CAAE,CAAO,CAAC,EAAE,EASlE,OARA,EACE,WACE,EAAK,QAAQ,CAAG,CAAC,EACjB,EAAK,KAAK,CAAG,CACf,EACA,CAAC,EAAM,EAET,EAAc,GACP,CACT,8BCjFE,GAAO,OAAO,CAAA,EAAA,CAAA,CAAA,2Q,E,C,C,C,A,A,C,C,A,C,C,A,A,8S,U,8B,uB,C,A,C,C,mB,kB,C,W,C,C,E,C,C,C,M,C,6M,A,O,c,C,I,C,e,0D,O,c,C,I,C,e,6I,gB,G,I,E,E,G,E,Y,E,E,E,G,C,O,C,E,K,A,E,O,C,E,K,A,C,O,C,E,A,M,C,C,A,E,E,K,A,Y,G,E,I,C,C,G,K,E,C,C,K,G,C,E,E,C,O,C,I,C,C,A,kB,S,Q,I,C,A,C,A,G,E,K,O,C,E,C,C,A,C,C,C,K,C,C,C,K,E,G,C,C,W,C,E,E,K,C,C,E,K,G,C,A,C,A,C,E,E,K,G,C,C,C,A,C,C,C,C,C,C,E,C,A,G,E,C,C,G,C,C,I,E,E,C,C,C,A,C,C,A,C,A,C,S,E,I,C,G,I,C,C,C,C,I,C,M,E,K,G,I,C,K,C,E,K,A,C,C,I,C,O,C,E,I,C,Q,C,E,I,C,C,C,U,C,E,K,O,C,A,I,C,E,U,C,C,M,C,C,G,C,I,E,G,C,C,E,I,G,I,C,I,C,G,C,C,E,A,C,A,C,A,2B,C,C,C,S,A,E,E,A,G,E,C,C,C,I,C,C,C,G,C,C,E,I,G,I,C,I,C,E,C,A,I,C,E,C,A,C,A,C,O,U,uH,mB,a,O,6C,C,O,M,C,A,C,A,C,E,C,A,C,E,C,6B,C,mD,oJ,a,C,C,U,M,E,C,E,E,U,A,E,E,Y,M,E,M,I,S,C,C,A,kC,C,C,A,G,A,U,O,G,A,C,A,C,K,O,C,G,C,C,A,C,Q,C,C,C,C,M,E,E,U,S,C,A,C,C,C,E,C,A,C,A,C,C,E,S,qB,C,C,2C,E,E,E,A,C,C,C,C,C,A,C,C,C,U,I,E,C,C,C,C,E,O,C,M,C,C,I,I,E,C,E,C,C,I,G,C,C,E,A,C,A,E,C,C,C,C,C,C,C,E,C,C,A,E,I,C,E,O,G,C,C,M,C,A,C,A,C,A,C,A,G,M,C,E,E,O,A,E,C,A,E,A,E,G,E,C,E,K,E,C,G,C,C,G,C,C,C,A,I,G,C,E,C,A,C,G,O,C,M,C,M,E,E,C,C,E,C,A,A,C,A,A,C,K,C,M,C,E,Q,E,E,I,E,G,E,A,A,E,O,C,E,M,C,I,E,A,C,A,M,C,I,C,G,A,C,C,G,C,6B,C,E,E,C,A,C,A,A,C,A,O,C,C,C,I,C,C,G,C,E,C,C,Y,A,E,E,U,I,I,C,E,E,U,E,E,E,E,C,C,C,sF,S,E,C,C,C,A,Q,E,C,C,E,C,G,C,C,G,C,E,C,C,K,W,O,E,I,E,C,C,E,C,C,K,A,Y,G,I,E,K,E,E,I,E,C,C,sD,E,C,C,E,K,mB,c,K,G,C,C,A,C,Q,C,E,C,C,+C,C,A,C,C,C,C,K,c,G,C,A,S,C,C,U,C,C,G,E,C,C,Y,M,G,C,a,E,S,C,a,+B,C,oC,E,A,A,C,C,C,E,G,c,G,C,A,C,Y,C,U,C,A,C,A,C,A,C,A,C,A,E,C,E,C,C,E,C,A,Q,I,C,A,I,E,C,M,E,C,C,A,E,C,C,G,E,G,I,E,C,C,C,K,E,O,E,A,C,C,K,C,O,A,C,A,C,C,E,E,C,C,C,E,C,C,C,A,C,C,A,C,C,C,C,A,E,E,G,U,Q,C,C,C,A,C,A,A,C,E,C,E,C,M,K,G,G,C,A,O,O,C,G,G,C,C,C,E,E,E,C,A,C,C,A,C,C,A,I,C,A,M,Q,c,qB,I,G,Q,C,O,C,K,E,G,C,C,U,C,C,E,C,C,E,C,C,C,C,C,A,A,C,C,C,C,G,E,M,C,M,C,G,O,C,A,G,C,C,E,C,A,C,A,C,C,C,K,C,C,E,C,C,G,C,C,C,C,G,E,M,C,C,C,C,C,C,G,C,C,A,E,C,C,A,C,C,C,C,E,C,C,C,A,C,C,A,G,E,C,A,C,A,A,M,E,iB,E,8B,C,M,M,E,I,E,G,C,G,U,C,C,A,C,C,C,c,G,E,C,gC,C,C,A,E,E,Y,C,gB,K,E,C,G,A,C,a,W,A,C,C,C,C,C,A,G,A,E,M,C,M,Q,U,C,I,E,G,C,A,G,A,A,C,Y,G,M,C,C,M,C,E,I,C,C,M,C,S,C,C,C,K,C,E,M,a,E,M,C,A,S,C,C,sB,G,C,I,C,A,C,A,e,E,C,C,C,E,E,A,C,S,C,C,C,A,C,W,C,S,C,C,Q,C,C,C,E,G,C,A,C,K,E,O,C,C,K,E,G,C,O,M,E,A,E,A,A,E,c,E,G,O,U,C,E,wB,M,E,C,A,G,A,qC,I,C,C,I,E,E,I,E,E,C,G,Y,O,G,E,W,I,mB,G,C,E,C,C,C,A,E,W,A,E,C,E,E,I,A,E,E,M,C,C,A,I,O,C,C,C,C,A,M,C,G,C,Q,E,C,A,G,A,C,E,C,C,I,E,E,C,C,O,C,S,E,E,E,E,E,E,E,Q,C,Y,C,C,A,E,M,E,E,A,S,E,a,C,A,C,A,C,A,A,Q,E,K,G,E,C,C,C,A,E,E,C,K,C,I,C,G,C,C,E,C,E,I,E,C,C,E,C,C,A,M,C,G,M,E,C,C,Y,C,Q,C,U,C,E,E,W,A,E,E,E,I,C,C,K,E,G,W,C,K,C,C,C,C,C,G,E,C,A,K,U,E,C,C,C,E,G,K,W,C,C,G,M,C,W,C,c,C,M,C,C,A,C,E,E,A,C,A,G,C,A,C,A,C,A,C,E,C,C,G,Q,I,C,Y,K,W,O,K,E,C,C,K,S,C,C,C,Q,C,C,I,C,S,C,C,G,I,C,C,U,I,C,E,Q,C,C,e,M,C,O,E,C,Q,C,C,I,C,O,C,C,C,C,C,C,C,A,E,C,W,G,C,A,C,A,Q,C,G,a,M,C,O,E,C,K,G,C,C,E,C,C,C,C,C,C,E,K,I,G,C,E,E,E,C,G,A,G,E,E,I,K,K,G,E,O,C,C,C,G,C,C,C,W,C,W,C,E,C,C,C,C,E,S,G,A,C,C,E,C,C,Y,C,U,S,C,C,C,C,G,A,C,C,Y,C,Q,S,C,C,C,C,C,C,A,C,C,C,E,E,E,S,A,E,G,E,C,C,E,G,C,C,E,I,C,C,A,C,S,Q,I,S,A,M,E,C,C,A,C,A,E,6F,S,E,C,E,A,O,K,S,C,E,C,E,I,C,S,A,C,E,G,C,E,G,C,C,C,E,C,A,G,E,C,C,A,E,E,A,G,Q,C,A,G,K,I,E,E,G,E,E,E,C,C,E,E,A,E,O,C,O,C,E,I,C,A,C,C,C,E,I,E,G,C,E,C,e,C,A,C,C,A,G,E,C,C,C,G,C,C,A,A,I,G,E,E,C,E,K,E,C,A,A,E,G,C,G,I,C,G,I,E,C,C,K,C,C,E,G,E,C,C,A,E,C,C,C,E,C,A,A,G,C,C,C,A,C,C,S,E,C,E,M,O,U,C,E,M,C,S,C,Q,C,I,C,C,C,A,C,A,S,E,C,E,G,E,Q,E,C,C,U,C,Q,a,C,C,qB,C,U,C,M,C,a,C,S,C,C,W,C,U,gB,C,O,C,Y,C,mB,C,E,oB,C,kB,C,C,kB,C,C,C,kB,S,C,qB,A,C,iB,C,iB,C,6B,C,gB,C,oB,C,sB,C,c,C,Q,C,W,C,U,C,c,C,C,C,O,W,C,O,C,C,G,E,C,C,C,K,C,C,C,C,A,E,C,M,E,C,C,A,E,C,A,C,E,M,C,K,C,Q,C,U,C,E,G,A,S,C,C,K,I,C,C,G,C,C,A,C,C,A,C,C,C,C,A,E,C,C,E,K,C,A,A,G,G,I,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","ignoreList":[0,1,3,4,5,6,7,8,9,13,14,15,16,19,20,21,22,23,24,25,26,27,31,34,35,36,37,38,39]}