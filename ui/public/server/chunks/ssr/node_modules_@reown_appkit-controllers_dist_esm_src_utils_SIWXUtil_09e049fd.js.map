{"version":3,"sources":["turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/base-x/src/esm/index.js","../../errors/version.ts","../../../utils/data/size.ts","../../../utils/signature/recoverPublicKey.ts","../../../utils/address/isAddress.ts","../../../utils/data/trim.ts","../../errors/base.ts","../../../accounts/utils/publicKeyToAddress.ts","../../../../src/utils/SIWXUtil.ts","../../errors/encoding.ts","../../errors/data.ts","../../errors/address.ts","../../../utils/encoding/toBytes.ts","../../../utils/data/isHex.ts","../../../utils/data/pad.ts","../../../utils/hash/keccak256.ts","../../../utils/encoding/fromHex.ts","../../../utils/address/getAddress.ts","../../../utils/encoding/toHex.ts","../../../utils/signature/recoverAddress.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/bs58/src/esm/index.js","../src/_u64.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/crypto.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/client.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/universal-provider/src/constants/values.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/utils/src/caip.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/universal-provider/src/constants/events.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/history.ts","../src/sha3.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/publisher.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/proposal.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/utils/src/misc.ts","../../utils/lru.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/predicate/isPrimitive.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/store.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/core.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/engine.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/subscriber.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/crypto.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/pendingRequest.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/@noble/hashes/esm/_assert.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/keychain.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/predicate/isTypedArray.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/keychain.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/verify.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/expirer.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/object/clone.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/constants/auth.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/messages.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/pairing.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/proposal.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/relayer.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/echo.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/session.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/store.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/core/events.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/pendingRequest.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/subscriber.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/sign-client/client.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/authKey.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/pairing.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/types/src/sign-client/engine.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/history.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/authPairingTopic.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/authRequest.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/expirer.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/verify.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/controllers/authStore.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/echo.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/sign-client/src/client.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/@walletconnect/core/src/constants/events.ts","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/multiformats/esm/vendor/base-x.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/@noble/hashes/esm/_u64.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/compat/predicate/isObjectLike.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/compat/_internal/getSymbols.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/compat/_internal/getTag.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/compat/_internal/tags.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/@noble/hashes/esm/utils.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/object/cloneDeepWith.mjs","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/multiformats/esm/src/bytes.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/multiformats/esm/src/bases/base.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/@noble/hashes/esm/sha3.js","turbopack:///[project]/node_modules/@reown/appkit-controllers/node_modules/node_modules/es-toolkit/dist/compat/object/cloneDeepWith.mjs"],"sourcesContent":["// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  const BASE_MAP = new Uint8Array(256)\n  for (let j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    // eslint-disable-next-line no-empty\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n    // Skip leading zeroes in base58 result.\n    let it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    let psz = 0\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n    // Process the characters.\n    while (psz < source.length) {\n      // Find code of next character\n      const charCode = source.charCodeAt(psz)\n      // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n      // Decode character\n      let carry = BASE_MAP[charCode]\n      // Invalid character\n      if (carry === 255) { return }\n      let i = 0\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n    // Skip leading zeroes in b256.\n    let it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    const vch = new Uint8Array(zeroes + (size - it4))\n    let j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode,\n    decodeUnsafe,\n    decode\n  }\n}\nexport default base\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import basex from 'base-x';\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nexport default basex(ALPHABET);\n",null,"import { JsonRpcPayload } from \"@walletconnect/jsonrpc-types\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore } from \"./core\";\nimport { IKeyChain } from \"./keychain\";\n\nexport declare namespace CryptoTypes {\n  export type EncodingType = \"base64pad\" | \"base64url\";\n\n  export interface Participant {\n    publicKey: string;\n  }\n\n  export interface KeyPair {\n    privateKey: string;\n    publicKey: string;\n  }\n\n  export interface EncryptParams {\n    message: string;\n    symKey: string;\n    type?: number;\n    iv?: string;\n    senderPublicKey?: string;\n    encoding?: EncodingType;\n  }\n\n  export interface DecryptParams {\n    symKey: string;\n    encoded: string;\n    encoding?: EncodingType;\n  }\n\n  export interface EncodingParams {\n    type: Uint8Array;\n    sealed: Uint8Array;\n    iv: Uint8Array;\n    senderPublicKey?: Uint8Array;\n    encoding?: EncodingType;\n  }\n\n  export interface DecodingParams {\n    encoded: string;\n    encoding?: EncodingType;\n  }\n\n  export interface EncodeOptions {\n    type?: number;\n    senderPublicKey?: string;\n    receiverPublicKey?: string;\n    encoding?: EncodingType;\n  }\n\n  export interface DecodeOptions {\n    receiverPublicKey?: string;\n    encoding?: EncodingType;\n  }\n\n  export interface EncodingValidation {\n    type: number;\n    senderPublicKey?: string;\n    receiverPublicKey?: string;\n  }\n\n  export interface TypeOneParams {\n    type: 1;\n    senderPublicKey: string;\n    receiverPublicKey: string;\n  }\n}\n\nexport abstract class ICrypto {\n  public abstract name: string;\n\n  public abstract readonly context: string;\n\n  public abstract keychain: IKeyChain;\n\n  public abstract readonly randomSessionIdentifier: string;\n\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    // @ts-ignore\n    keychain?: IKeyChain,\n  ) {}\n\n  public abstract init(): Promise<void>;\n\n  public abstract hasKeys(tag: string): boolean;\n\n  public abstract getClientId(): Promise<string>;\n\n  public abstract generateKeyPair(): Promise<string>;\n\n  public abstract generateSharedKey(\n    selfPublicKey: string,\n    peerPublicKey: string,\n    overrideTopic?: string,\n  ): Promise<string>;\n\n  public abstract setSymKey(symKey: string, overrideTopic?: string): Promise<string>;\n\n  public abstract deleteKeyPair(publicKey: string): Promise<void>;\n\n  public abstract deleteSymKey(topic: string): Promise<void>;\n\n  public abstract encode(\n    topic: string,\n    payload: JsonRpcPayload,\n    opts?: CryptoTypes.EncodeOptions,\n  ): Promise<string>;\n\n  public abstract decode(\n    topic: string,\n    encoded: string,\n    opts?: CryptoTypes.DecodeOptions,\n  ): Promise<JsonRpcPayload>;\n\n  public abstract signJWT(aud: string): Promise<string>;\n  public abstract getPayloadType(encoded: string, encoding?: CryptoTypes.EncodingType): number;\n  public abstract getPayloadSenderPublicKey(\n    encoded: string,\n    encoding?: CryptoTypes.EncodingType,\n  ): string | undefined;\n}\n","import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.org\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n  session_authenticate: \"session_authenticate\",\n  session_request_expire: \"session_request_expire\",\n  session_connect: \"session_connect\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\nexport const WALLETCONNECT_DEEPLINK_CHOICE = \"WALLETCONNECT_DEEPLINK_CHOICE\";\n","export const LOGGER = \"error\";\n\nexport const RELAY_URL = \"wss://relay.walletconnect.org\";\n\nexport const PROTOCOL = \"wc\";\nexport const WC_VERSION = 2;\nexport const CONTEXT = \"universal_provider\";\n\nexport const STORAGE = `${PROTOCOL}@${WC_VERSION}:${CONTEXT}:`;\n\nexport const RPC_URL = \"https://rpc.walletconnect.org/v1/\";\n\nexport const GENERIC_SUBPROVIDER_NAME = \"generic\";\n\nexport const BUNDLER_URL = `${RPC_URL}bundler`;\n","import { SessionTypes, ProposalTypes } from \"@walletconnect/types\";\n\ninterface ChainIdParams {\n  namespace: string;\n  reference: string;\n}\n\ninterface AccountIdParams extends ChainIdParams {\n  address: string;\n}\n\nconst CAIP_DELIMITER = \":\";\n\nexport function parseChainId(chain: string): ChainIdParams {\n  const [namespace, reference] = chain.split(CAIP_DELIMITER);\n  return { namespace, reference };\n}\n\nexport function formatChainId(params: ChainIdParams): string {\n  const { namespace, reference } = params;\n  return [namespace, reference].join(CAIP_DELIMITER);\n}\n\nexport function parseAccountId(account: string): AccountIdParams {\n  const [namespace, reference, address] = account.split(CAIP_DELIMITER);\n  return { namespace, reference, address };\n}\n\nexport function formatAccountId(params: AccountIdParams): string {\n  const { namespace, reference, address } = params;\n  return [namespace, reference, address].join(CAIP_DELIMITER);\n}\n\nexport function getUniqueValues(array: string[], parser: (str: string) => string): string[] {\n  const unique: string[] = [];\n  array.forEach((str) => {\n    const value = parser(str);\n    if (!unique.includes(value)) unique.push(value);\n  });\n  return unique;\n}\n\nexport function getAddressFromAccount(account: string) {\n  const { address } = parseAccountId(account);\n  return address;\n}\n\nexport function getChainFromAccount(account: string) {\n  const { namespace, reference } = parseAccountId(account);\n  const chain = formatChainId({ namespace, reference });\n  return chain;\n}\n\nexport function formatAccountWithChain(address: string, chain: string) {\n  const { namespace, reference } = parseChainId(chain);\n  const account = formatAccountId({ namespace, reference, address });\n  return account;\n}\n\nexport function getAddressesFromAccounts(accounts: string[]) {\n  return getUniqueValues(accounts, getAddressFromAccount);\n}\n\nexport function getChainsFromAccounts(accounts: string[]) {\n  return getUniqueValues(accounts, getChainFromAccount);\n}\n\nexport function getAccountsFromNamespaces(\n  namespaces: SessionTypes.Namespaces,\n  keys: string[] = [],\n): string[] {\n  const accounts: string[] = [];\n  Object.keys(namespaces).forEach((key) => {\n    if (keys.length && !keys.includes(key)) return;\n    const ns = namespaces[key];\n    accounts.push(...ns.accounts);\n  });\n  return accounts;\n}\n\nexport function getChainsFromNamespaces(\n  namespaces: SessionTypes.Namespaces,\n  keys: string[] = [],\n): string[] {\n  const chains: string[] = [];\n  Object.keys(namespaces).forEach((key) => {\n    if (keys.length && !keys.includes(key)) return;\n    const ns = namespaces[key];\n    chains.push(...getChainsFromAccounts(ns.accounts));\n  });\n  return chains;\n}\n\nexport function getChainsFromRequiredNamespaces(\n  requiredNamespaces: ProposalTypes.RequiredNamespaces,\n  keys: string[] = [],\n): string[] {\n  const chains: string[] = [];\n  Object.keys(requiredNamespaces).forEach((key) => {\n    if (keys.length && !keys.includes(key)) return;\n    const ns = requiredNamespaces[key];\n    chains.push(...getChainsFromNamespace(key, ns));\n  });\n  return chains;\n}\n\nexport function getChainsFromNamespace(\n  namespace: string,\n  namespaceProps: ProposalTypes.BaseRequiredNamespace,\n) {\n  // check if chainId is provided in the key as `eip155:1` or in the namespace as chains[]\n  return namespace.includes(\":\") ? [namespace] : namespaceProps.chains || [];\n}\n","export const PROVIDER_EVENTS = {\n  DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n",null,"import { IEvents } from \"@walletconnect/events\";\nimport { Logger } from \"@walletconnect/logger\";\n\nimport { IRelayer, RelayerTypes } from \"./relayer\";\n\nexport declare namespace PublisherTypes {\n  export interface Params {\n    topic: string;\n    message: string;\n    opts: Omit<RelayerTypes.PublishOptions, \"internal\">;\n  }\n}\n\nexport abstract class IPublisher extends IEvents {\n  public abstract name: string;\n\n  public abstract readonly context: string;\n\n  constructor(\n    public relayer: IRelayer,\n    public logger: Logger,\n  ) {\n    super();\n  }\n\n  public abstract publish(\n    topic: string,\n    message: string,\n    opts?: RelayerTypes.PublishOptions,\n  ): Promise<void>;\n}\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { detect } from \"detect-browser\";\nimport { FIVE_MINUTES, fromMiliseconds, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  SignClientTypes,\n  RelayerClientMetadata,\n  EngineTypes,\n  RelayerTypes,\n} from \"@walletconnect/types\";\nimport { getDocument, getLocation, getNavigator } from \"@walletconnect/window-getters\";\nimport { getWindowMetadata } from \"@walletconnect/window-metadata\";\nimport { ErrorResponse } from \"@walletconnect/jsonrpc-utils\";\nimport { IKeyValueStorage } from \"@walletconnect/keyvaluestorage\";\n\n// -- constants -----------------------------------------//\nexport const REACT_NATIVE_PRODUCT = \"ReactNative\";\n\nexport const ENV_MAP = {\n  reactNative: \"react-native\",\n  node: \"node\",\n  browser: \"browser\",\n  unknown: \"unknown\",\n};\n\nexport const EMPTY_SPACE = \" \";\n\nexport const COLON = \":\";\n\nexport const SLASH = \"/\";\n\nexport const DEFAULT_DEPTH = 2;\n\nexport const ONE_THOUSAND = 1000;\n\nexport const SDK_TYPE = \"js\";\n\n// -- env -----------------------------------------------//\n\nexport function isNode(): boolean {\n  return (\n    typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\"\n  );\n}\n\nexport function isReactNative(): boolean {\n  return !getDocument() && !!getNavigator() && navigator.product === REACT_NATIVE_PRODUCT;\n}\n\nexport function isAndroid(): boolean {\n  return (\n    isReactNative() &&\n    typeof global !== \"undefined\" &&\n    typeof (global as any)?.Platform !== \"undefined\" &&\n    (global as any)?.Platform.OS === \"android\"\n  );\n}\n\nexport function isIos(): boolean {\n  return (\n    isReactNative() &&\n    typeof global !== \"undefined\" &&\n    typeof (global as any)?.Platform !== \"undefined\" &&\n    (global as any)?.Platform.OS === \"ios\"\n  );\n}\n\nexport function isBrowser(): boolean {\n  return !isNode() && !!getNavigator() && !!getDocument();\n}\n\nexport function getEnvironment(): string {\n  if (isReactNative()) return ENV_MAP.reactNative;\n  if (isNode()) return ENV_MAP.node;\n  if (isBrowser()) return ENV_MAP.browser;\n  return ENV_MAP.unknown;\n}\n\nexport function getAppId(): string | undefined {\n  try {\n    if (\n      isReactNative() &&\n      typeof global !== \"undefined\" &&\n      typeof (global as any)?.Application !== \"undefined\"\n    ) {\n      return (global as any).Application?.applicationId;\n    }\n    return undefined;\n  } catch {\n    return undefined;\n  }\n}\n\n// -- query -----------------------------------------------//\n\nexport function appendToQueryString(\n  queryString: string,\n  newQueryParams: Record<string, any>,\n): string {\n  const urlSearchParams = new URLSearchParams(queryString);\n\n  for (const key of Object.keys(newQueryParams).sort()) {\n    if (newQueryParams.hasOwnProperty(key)) {\n      const value = newQueryParams[key];\n      if (value !== undefined) {\n        urlSearchParams.set(key, value);\n      }\n    }\n  }\n\n  return urlSearchParams.toString();\n}\n\n// -- metadata ----------------------------------------------//\n\nexport function populateAppMetadata(metadata?: SignClientTypes.Metadata): SignClientTypes.Metadata {\n  const appMetadata = getAppMetadata();\n  try {\n    if (metadata?.url && appMetadata.url) {\n      if (new URL(metadata.url).host !== new URL(appMetadata.url).host) {\n        console.warn(\n          `The configured WalletConnect 'metadata.url':${metadata.url} differs from the actual page url:${appMetadata.url}. This is probably unintended and can lead to issues.`,\n        );\n        metadata.url = appMetadata.url;\n      }\n    }\n\n    if (metadata?.icons?.length && metadata.icons.length > 0) {\n      metadata.icons = metadata.icons.filter((icon) => icon !== \"\");\n    }\n\n    return {\n      ...appMetadata,\n      ...metadata,\n      url: metadata?.url || appMetadata.url,\n      name: metadata?.name || appMetadata.name,\n      description: metadata?.description || appMetadata.description,\n      icons:\n        metadata?.icons?.length && metadata.icons.length > 0 ? metadata.icons : appMetadata.icons,\n    };\n  } catch (error) {\n    console.warn(\"Error populating app metadata\", error);\n    return metadata || appMetadata;\n  }\n}\n\nexport function getAppMetadata(): SignClientTypes.Metadata {\n  return (\n    getWindowMetadata() || {\n      name: \"\",\n      description: \"\",\n      url: \"\",\n      icons: [\"\"],\n    }\n  );\n}\n\nexport function getRelayClientMetadata(protocol: string, version: number): RelayerClientMetadata {\n  const env = getEnvironment();\n\n  const metadata: RelayerClientMetadata = { protocol, version, env };\n  if (env === \"browser\") {\n    metadata.host = getLocation()?.host || \"unknown\";\n  }\n  return metadata;\n}\n\n// -- rpcUrl ----------------------------------------------//\n\nexport function getJavascriptOS() {\n  const env = getEnvironment();\n  // global.Platform is set by react-native-compat\n  if (\n    env === ENV_MAP.reactNative &&\n    typeof global !== \"undefined\" &&\n    typeof (global as any)?.Platform !== \"undefined\"\n  ) {\n    const { OS, Version } = (global as any).Platform;\n    return [OS, Version].join(\"-\");\n  }\n\n  const info = detect();\n  if (info === null) return \"unknown\";\n  const os = info.os ? info.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n  if (info.type === \"browser\") {\n    return [os, info.name, info.version].join(\"-\");\n  }\n  return [os, info.version].join(\"-\");\n}\n\nexport function getJavascriptID() {\n  const env = getEnvironment();\n  return env === ENV_MAP.browser ? [env, getLocation()?.host || \"unknown\"].join(\":\") : env;\n}\n\nexport function formatUA(protocol: string, version: number, sdkVersion: string) {\n  const os = getJavascriptOS();\n  const id = getJavascriptID();\n  return [[protocol, version].join(\"-\"), [SDK_TYPE, sdkVersion].join(\"-\"), os, id].join(\"/\");\n}\nconsole;\n\nexport function formatRelayRpcUrl({\n  protocol,\n  version,\n  relayUrl,\n  sdkVersion,\n  auth,\n  projectId,\n  useOnCloseEvent,\n  bundleId,\n  packageName,\n}: RelayerTypes.RpcUrlParams) {\n  const splitUrl = relayUrl.split(\"?\");\n  const ua = formatUA(protocol, version, sdkVersion);\n  const params = {\n    auth,\n    ua,\n    projectId,\n    useOnCloseEvent: useOnCloseEvent || undefined,\n    packageName: packageName || undefined,\n    bundleId: bundleId || undefined,\n  };\n  const queryString = appendToQueryString(splitUrl[1] || \"\", params);\n  return splitUrl[0] + \"?\" + queryString;\n}\n\nexport function getHttpUrl(url: string) {\n  // regex from https://stackoverflow.com/questions/3883871/regexp-to-grab-protocol-from-url\n  const matches = url.match(/^[^:]+(?=:\\/\\/)/gi) || [];\n  let protocol = matches[0];\n  const domain = typeof protocol !== \"undefined\" ? url.split(\"://\")[1] : url;\n  protocol = protocol === \"wss\" ? \"https\" : \"http\";\n  return [protocol, domain].join(\"://\");\n}\n\n// -- assert ------------------------------------------------- //\n\nexport function assertType(obj: any, key: string, type: string) {\n  // eslint-disable-next-line valid-typeof\n  if (!obj[key] || typeof obj[key] !== type) {\n    throw new Error(`Missing or invalid \"${key}\" param`);\n  }\n}\n\n// -- context ------------------------------------------------- //\n\nexport function parseContextNames(context: string, depth = DEFAULT_DEPTH) {\n  return getLastItems(context.split(SLASH), depth);\n}\n\nexport function formatMessageContext(context: string): string {\n  return parseContextNames(context).join(EMPTY_SPACE);\n}\n\n// -- array ------------------------------------------------- //\n\nexport function hasOverlap(a: any[], b: any[]): boolean {\n  const matches = a.filter((x) => b.includes(x));\n  return matches.length === a.length;\n}\n\nexport function getLastItems(arr: any[], depth = DEFAULT_DEPTH): any[] {\n  return arr.slice(Math.max(arr.length - depth, 0));\n}\n\n// -- map ------------------------------------------------- //\n\nexport function mapToObj<T = any>(map: Map<string, T>): Record<string, T> {\n  return Object.fromEntries(map.entries());\n}\n\nexport function objToMap<T = any>(obj: Record<string, T>): Map<string, T> {\n  return new Map<string, T>(Object.entries<T>(obj));\n}\n\nexport function mapEntries<A = any, B = any>(\n  obj: Record<string, A>,\n  cb: (x: A) => B,\n): Record<string, B> {\n  const res: any = {};\n  Object.keys(obj).forEach((key) => {\n    res[key] = cb(obj[key]);\n  });\n  return res;\n}\n\n// -- enum ------------------------------------------------- //\n\n// source: https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275\nexport const enumify = <T extends { [index: string]: U }, U extends string>(x: T): T => x;\n\n// -- string ------------------------------------------------- //\n\nexport function capitalizeWord(word: string) {\n  return word.trim().replace(/^\\w/, (c) => c.toUpperCase());\n}\n\nexport function capitalize(str: string) {\n  return str\n    .split(EMPTY_SPACE)\n    .map((w) => capitalizeWord(w))\n    .join(EMPTY_SPACE);\n}\n\n// -- promises --------------------------------------------- //\nexport function createDelayedPromise<T>(\n  expiry: number = FIVE_MINUTES,\n  expireErrorMessage?: string,\n) {\n  const timeout = toMiliseconds(expiry || FIVE_MINUTES);\n  let cacheResolve: undefined | ((value: T | PromiseLike<T>) => void);\n  let cacheReject: undefined | ((value?: ErrorResponse) => void);\n  let cacheTimeout: undefined | NodeJS.Timeout;\n  let result: Promise<Awaited<T>> | Promise<T> | undefined;\n\n  const done = () =>\n    new Promise<T>((promiseResolve, promiseReject) => {\n      if (result) {\n        return promiseResolve(result);\n      }\n      cacheTimeout = setTimeout(() => {\n        const err = new Error(expireErrorMessage);\n        result = Promise.reject(err);\n        promiseReject(err);\n      }, timeout);\n      cacheResolve = promiseResolve;\n      cacheReject = promiseReject;\n    });\n  const resolve = (value?: T) => {\n    if (cacheTimeout && cacheResolve) {\n      clearTimeout(cacheTimeout);\n      cacheResolve(value as T);\n      result = Promise.resolve(value) as Promise<Awaited<T>>;\n    }\n  };\n  const reject = (value?: ErrorResponse) => {\n    if (cacheTimeout && cacheReject) {\n      clearTimeout(cacheTimeout);\n      cacheReject(value);\n    }\n  };\n\n  return {\n    resolve,\n    reject,\n    done,\n  };\n}\n\nexport function createExpiringPromise<T>(\n  promise: Promise<T>,\n  expiry: number,\n  expireErrorMessage?: string,\n) {\n  return new Promise(async (resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error(expireErrorMessage)), expiry);\n    try {\n      const result = await promise;\n      resolve(result);\n    } catch (error) {\n      reject(error);\n    }\n    clearTimeout(timeout);\n  });\n}\n\n// -- expirer --------------------------------------------- //\n\nexport function formatExpirerTarget(type: \"topic\" | \"id\", value: string | number): string {\n  if (typeof value === \"string\" && value.startsWith(`${type}:`)) return value;\n  if (type.toLowerCase() === \"topic\") {\n    if (typeof value !== \"string\")\n      throw new Error(`Value must be \"string\" for expirer target type: topic`);\n    return `topic:${value}`;\n  } else if (type.toLowerCase() === \"id\") {\n    if (typeof value !== \"number\")\n      throw new Error(`Value must be \"number\" for expirer target type: id`);\n    return `id:${value}`;\n  }\n  throw new Error(`Unknown expirer target type: ${type}`);\n}\n\nexport function formatTopicTarget(topic: string): string {\n  return formatExpirerTarget(\"topic\", topic);\n}\n\nexport function formatIdTarget(id: number): string {\n  return formatExpirerTarget(\"id\", id);\n}\n\nexport function parseExpirerTarget(target: string) {\n  const [type, value] = target.split(\":\");\n  const parsed: { id?: number; topic?: string } = { id: undefined, topic: undefined };\n  if (type === \"topic\" && typeof value === \"string\") {\n    parsed.topic = value;\n  } else if (type === \"id\" && Number.isInteger(Number(value))) {\n    parsed.id = Number(value);\n  } else {\n    throw new Error(`Invalid target, expected id:number or topic:string, got ${type}:${value}`);\n  }\n\n  return parsed;\n}\n\nexport function calcExpiry(ttl: number, now?: number): number {\n  return fromMiliseconds((now || Date.now()) + toMiliseconds(ttl));\n}\n\nexport function isExpired(expiry: number) {\n  return Date.now() >= toMiliseconds(expiry);\n}\n\n// -- events ---------------------------------------------- //\n\nexport function engineEvent(event: EngineTypes.Event, id?: number | string | undefined) {\n  return `${event}${id ? `:${id}` : \"\"}`;\n}\n\nexport function mergeArrays<T>(a: T[] = [], b: T[] = []): T[] {\n  return [...new Set([...a, ...b])];\n}\n\nexport async function handleDeeplinkRedirect({\n  id,\n  topic,\n  wcDeepLink,\n}: {\n  id: number;\n  topic: string;\n  wcDeepLink: string;\n}) {\n  try {\n    if (!wcDeepLink) return;\n\n    const json = typeof wcDeepLink === \"string\" ? JSON.parse(wcDeepLink) : wcDeepLink;\n    const deeplink = json?.href;\n    if (typeof deeplink !== \"string\") return;\n    const link = formatDeeplinkUrl(deeplink, id, topic);\n    const env = getEnvironment();\n\n    if (env === ENV_MAP.browser) {\n      if (!getDocument()?.hasFocus()) {\n        console.warn(\"Document does not have focus, skipping deeplink.\");\n        return;\n      }\n\n      openDeeplink(link);\n    } else if (env === ENV_MAP.reactNative) {\n      // global.Linking is set by react-native-compat\n      if (typeof (global as any)?.Linking !== \"undefined\") {\n        await (global as any).Linking.openURL(link);\n      }\n    }\n  } catch (err) {\n    // Silent error, just log in console\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nexport function formatDeeplinkUrl(deeplink: string, requestId: number, sessionTopic: string) {\n  const payload = `requestId=${requestId}&sessionTopic=${sessionTopic}`;\n  if (deeplink.endsWith(\"/\")) deeplink = deeplink.slice(0, -1);\n  let link = `${deeplink}`;\n  if (deeplink.startsWith(\"https://t.me\")) {\n    const startApp = deeplink.includes(\"?\") ? \"&startapp=\" : \"?startapp=\";\n    link = `${link}${startApp}${toBase64(payload, true)}`;\n  } else {\n    link = `${link}/wc?${payload}`;\n  }\n  return link;\n}\n\nexport function openDeeplink(url: string) {\n  let target = \"_self\";\n  if (isIframe()) {\n    target = \"_top\";\n  } else if (isTelegram() || url.startsWith(\"https://\") || url.startsWith(\"http://\")) {\n    target = \"_blank\";\n  }\n\n  window.open(url, target, \"noreferrer noopener\");\n}\n\nexport async function getDeepLink(storage: IKeyValueStorage, key: string) {\n  let link: string | undefined = \"\";\n  try {\n    if (isBrowser()) {\n      link = localStorage.getItem(key) as string;\n      if (link) return link;\n    }\n    link = await storage.getItem(key);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n  return link;\n}\n\nexport function getCommonValuesInArrays<T = string | number | boolean>(arr1: T[], arr2: T[]): T[] {\n  return arr1.filter((value) => arr2.includes(value));\n}\n\nexport function getSearchParamFromURL(url: string, param: any) {\n  const include = url.includes(param);\n  if (!include) return null;\n  const params = url.split(/([&,?,=])/);\n  const index = params.indexOf(param);\n  const value = params[index + 2];\n  return value;\n}\n\nexport function uuidv4() {\n  if (typeof crypto !== \"undefined\" && crypto?.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nexport function isTestRun() {\n  return typeof process !== \"undefined\" && process.env.IS_VITEST === \"true\";\n}\n\nexport function isTelegram() {\n  return (\n    typeof window !== \"undefined\" &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (Boolean((window as any).TelegramWebviewProxy) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Boolean((window as any).Telegram) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Boolean((window as any).TelegramWebviewProxyProto))\n  );\n}\n\nexport function isIframe() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return false;\n  }\n}\n\nexport function toBase64(input: string, removePadding = false): string {\n  const encoded = Buffer.from(input).toString(\"base64\");\n  return removePadding ? encoded.replace(/[=]/g, \"\") : encoded;\n}\n\nexport function fromBase64(encodedString: string): string {\n  return Buffer.from(encodedString, \"base64\").toString(\"utf-8\");\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n",null,"function isPrimitive(value) {\n    return value == null || (typeof value !== 'object' && typeof value !== 'function');\n}\n\nexport { isPrimitive };\n","import { ErrorResponse } from \"@walletconnect/jsonrpc-types\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore } from \"./core\";\n\nexport abstract class IStore<Key, Value> {\n  public abstract map: Map<Key, Value>;\n\n  public abstract readonly context: string;\n\n  public abstract readonly length: number;\n\n  public abstract readonly keys: Key[];\n\n  public abstract readonly values: Value[];\n\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    public name: string,\n    // @ts-ignore\n    storagePrefix?: string,\n  ) {}\n\n  public abstract init(): Promise<void>;\n\n  public abstract set(key: Key, value: Value): Promise<void>;\n\n  public abstract get(key: Key): Value;\n\n  public abstract getAll(filter?: Partial<Value>): Value[];\n\n  public abstract update(key: Key, update: Partial<Value>): Promise<void>;\n\n  public abstract delete(key: Key, reason: ErrorResponse): Promise<void>;\n}\n","export const CORE_PROTOCOL = \"wc\";\nexport const CORE_VERSION = 2;\nexport const CORE_CONTEXT = \"core\";\n\nexport const CORE_STORAGE_PREFIX = `${CORE_PROTOCOL}@${CORE_VERSION}:${CORE_CONTEXT}:`;\n\nexport const CORE_DEFAULT = {\n  name: CORE_CONTEXT,\n  logger: \"error\",\n};\n\nexport const CORE_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { FIVE_MINUTES, ONE_DAY, ONE_HOUR, SEVEN_DAYS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n    reject: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1120,\n    },\n    autoReject: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1121,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n  wc_sessionAuthenticate: {\n    req: {\n      ttl: ONE_HOUR,\n      prompt: true,\n      tag: 1116,\n    },\n    res: {\n      ttl: ONE_HOUR,\n      prompt: false,\n      tag: 1117,\n    },\n    reject: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1118,\n    },\n    autoReject: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1119,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n\nexport const ENGINE_QUEUE_STATES: { idle: \"IDLE\"; active: \"ACTIVE\" } = {\n  idle: \"IDLE\",\n  active: \"ACTIVE\",\n};\n\nexport const TVF_METHODS = {\n  eth_sendTransaction: {\n    key: \"\",\n  },\n  eth_sendRawTransaction: {\n    key: \"\",\n  },\n  wallet_sendCalls: {\n    key: \"\",\n  },\n\n  solana_signTransaction: {\n    key: \"signature\",\n  },\n  solana_signAllTransactions: {\n    key: \"transactions\",\n  },\n  solana_signAndSendTransaction: {\n    key: \"signature\",\n  },\n};\n","import { IEvents } from \"@walletconnect/events\";\nimport { ErrorResponse } from \"@walletconnect/jsonrpc-types\";\nimport { Logger } from \"@walletconnect/logger\";\n\nimport { IRelayer, RelayerTypes } from \"./relayer\";\n\nexport declare namespace SubscriberTypes {\n  export interface Params extends RelayerTypes.SubscribeOptions {\n    topic: string;\n  }\n\n  export interface Active extends Params {\n    id: string;\n  }\n}\n\nexport declare namespace SubscriberEvents {\n  export type Created = SubscriberTypes.Active;\n\n  export interface Deleted extends SubscriberTypes.Active {\n    reason: ErrorResponse;\n  }\n\n  export type Expired = Deleted;\n}\n\nexport abstract class ISubscriberTopicMap {\n  public map = new Map<string, string[]>();\n\n  public abstract readonly topics: string[];\n\n  public abstract set(topic: string, id: string): void;\n\n  public abstract get(topic: string): string[];\n\n  public abstract exists(topic: string, id: string): boolean;\n\n  public abstract delete(topic: string, id?: string): void;\n\n  public abstract clear(): void;\n}\n\nexport abstract class ISubscriber extends IEvents {\n  public abstract subscriptions: Map<string, SubscriberTypes.Active>;\n\n  public abstract topicMap: ISubscriberTopicMap;\n\n  public abstract pending: Map<string, SubscriberTypes.Params>;\n\n  public abstract readonly length: number;\n\n  public abstract readonly ids: string[];\n\n  public abstract readonly values: SubscriberTypes.Active[];\n\n  public abstract readonly topics: string[];\n\n  public abstract readonly hasAnyTopics: boolean;\n\n  public abstract name: string;\n\n  public abstract readonly context: string;\n\n  constructor(\n    public relayer: IRelayer,\n    public logger: Logger,\n  ) {\n    super();\n  }\n\n  public abstract init(): Promise<void>;\n\n  public abstract subscribe(\n    topic: string,\n    opts?: RelayerTypes.SubscribeOptions,\n  ): Promise<string | null>;\n\n  public abstract unsubscribe(topic: string, opts?: RelayerTypes.UnsubscribeOptions): Promise<void>;\n\n  public abstract isSubscribed(topic: string): Promise<boolean>;\n\n  public abstract isKnownTopic(topic: string): Promise<boolean>;\n\n  public abstract start(): Promise<void>;\n\n  public abstract stop(): Promise<void>;\n}\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const CRYPTO_CONTEXT = \"crypto\";\n\nexport const CRYPTO_CLIENT_SEED = \"client_ed25519_seed\";\n\nexport const CRYPTO_JWT_TTL = ONE_DAY;\n","export const REQUEST_CONTEXT = \"request\";\n","/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","import { Logger } from \"@walletconnect/logger\";\nimport { ICore } from \"./core\";\n\nexport abstract class IKeyChain {\n  public abstract keychain: Map<string, string>;\n\n  public abstract name: string;\n\n  public abstract readonly context: string;\n\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {}\n\n  public abstract init(): Promise<void>;\n\n  public abstract has(tag: string, opts?: any): boolean;\n\n  public abstract set(tag: string, key: string, opts?: any): Promise<void>;\n\n  public abstract get(tag: string, opts?: any): string;\n\n  public abstract del(tag: string, opts?: any): Promise<void>;\n}\n","function isTypedArray(x) {\n    return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\nexport { isTypedArray };\n","export const KEYCHAIN_CONTEXT = \"keychain\";\n\nexport const KEYCHAIN_STORAGE_VERSION = \"0.3\";\n","export const METHODS_TO_VERIFY = [\n  \"wc_sessionPropose\",\n  \"wc_sessionRequest\",\n  \"wc_authRequest\",\n  \"wc_sessionAuthenticate\",\n];\n","import { IEvents } from \"@walletconnect/events\";\nimport { Logger } from \"@walletconnect/logger\";\n\nimport { ICore } from \"./core\";\n\nexport declare namespace ExpirerTypes {\n  interface Expiration {\n    target: string;\n    expiry: number;\n  }\n\n  interface Created {\n    target: string;\n    expiration: Expiration;\n  }\n\n  interface Deleted {\n    target: string;\n    expiration: Expiration;\n  }\n\n  interface Expired {\n    target: string;\n    expiration: Expiration;\n  }\n}\n\nexport abstract class IExpirer extends IEvents {\n  public abstract name: string;\n\n  public abstract readonly context: string;\n\n  public abstract readonly length: number;\n\n  public abstract readonly keys: string[];\n\n  public abstract readonly values: ExpirerTypes.Expiration[];\n\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super();\n  }\n\n  public abstract init(): Promise<void>;\n\n  public abstract has(key: string | number): boolean;\n\n  public abstract set(key: string | number, expiry: number): void;\n\n  public abstract get(key: string | number): ExpirerTypes.Expiration;\n\n  public abstract del(key: string | number): void;\n}\n","import { isPrimitive } from '../predicate/isPrimitive.mjs';\nimport { isTypedArray } from '../predicate/isTypedArray.mjs';\n\nfunction clone(obj) {\n    if (isPrimitive(obj)) {\n        return obj;\n    }\n    if (Array.isArray(obj) ||\n        isTypedArray(obj) ||\n        obj instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && obj instanceof SharedArrayBuffer)) {\n        return obj.slice(0);\n    }\n    const prototype = Object.getPrototypeOf(obj);\n    const Constructor = prototype.constructor;\n    if (obj instanceof Date || obj instanceof Map || obj instanceof Set) {\n        return new Constructor(obj);\n    }\n    if (obj instanceof RegExp) {\n        const newRegExp = new Constructor(obj);\n        newRegExp.lastIndex = obj.lastIndex;\n        return newRegExp;\n    }\n    if (obj instanceof DataView) {\n        return new Constructor(obj.buffer.slice(0));\n    }\n    if (obj instanceof Error) {\n        const newError = new Constructor(obj.message);\n        newError.stack = obj.stack;\n        newError.name = obj.name;\n        newError.cause = obj.cause;\n        return newError;\n    }\n    if (typeof File !== 'undefined' && obj instanceof File) {\n        const newFile = new Constructor([obj], obj.name, { type: obj.type, lastModified: obj.lastModified });\n        return newFile;\n    }\n    if (typeof obj === 'object') {\n        const newObject = Object.create(prototype);\n        return Object.assign(newObject, obj);\n    }\n    return obj;\n}\n\nexport { clone };\n","export const AUTH_PROTOCOL = \"wc\";\nexport const AUTH_VERSION = 1.5;\nexport const AUTH_CONTEXT = \"auth\";\nexport const AUTH_KEYS_CONTEXT = \"authKeys\";\nexport const AUTH_PAIRING_TOPIC_CONTEXT = \"pairingTopics\";\nexport const AUTH_REQUEST_CONTEXT = \"requests\";\n\nexport const AUTH_STORAGE_PREFIX = `${AUTH_PROTOCOL}@${AUTH_VERSION}:${AUTH_CONTEXT}:`;\nexport const AUTH_PUBLIC_KEY_NAME = `${AUTH_STORAGE_PREFIX}:PUB_KEY`;\n","export const MESSAGES_CONTEXT = \"messages\";\n\nexport const MESSAGES_STORAGE_VERSION = \"0.3\";\n","import {\n  ErrorResponse,\n  JsonRpcRequest,\n  JsonRpcResponse,\n  JsonRpcResult,\n  JsonRpcError,\n} from \"@walletconnect/jsonrpc-types\";\nimport EventEmitter from \"events\";\n\nimport { ICore, CoreTypes } from \"./core\";\nimport { IStore } from \"./store\";\n\nimport { RelayerTypes } from \"../core/relayer\";\nimport { Logger } from \"@walletconnect/logger\";\n\nexport declare namespace PairingTypes {\n  interface Struct {\n    topic: string;\n    expiry: number;\n    relay: RelayerTypes.ProtocolOptions;\n    active: boolean;\n    peerMetadata?: CoreTypes.Metadata;\n    methods?: string[];\n  }\n}\n\nexport declare namespace PairingJsonRpcTypes {\n  // -- core ------------------------------------------------------- //\n  type DefaultResponse = true | ErrorResponse;\n\n  type WcMethod = \"wc_pairingDelete\" | \"wc_pairingPing\";\n\n  type Error = ErrorResponse;\n\n  // -- requests --------------------------------------------------- //\n\n  interface RequestParams {\n    wc_pairingDelete: {\n      code: number;\n      message: string;\n    };\n    wc_pairingPing: Record<string, unknown>;\n  }\n\n  // -- responses -------------------------------------------------- //\n  interface Results {\n    wc_pairingDelete: true;\n    wc_pairingPing: true;\n  }\n\n  // -- events ----------------------------------------------------- //\n  interface EventCallback<T extends JsonRpcRequest | JsonRpcResponse> {\n    topic: string;\n    payload: T;\n  }\n}\n\nexport type IPairingStore = IStore<string, PairingTypes.Struct>;\n\nexport abstract class IPairing {\n  public abstract name: string;\n  public abstract readonly context: string;\n  public abstract events: EventEmitter;\n  public abstract pairings: IPairingStore;\n\n  constructor(\n    public logger: Logger,\n    public core: ICore,\n  ) {}\n\n  public abstract init(): Promise<void>;\n\n  public abstract pair(params: {\n    uri: string;\n    activatePairing?: boolean;\n  }): Promise<PairingTypes.Struct>;\n\n  // for proposer to create inactive pairing\n  public abstract create(params?: {\n    methods?: string[];\n    transportType?: RelayerTypes.SubscribeOptions[\"transportType\"];\n  }): Promise<{ topic: string; uri: string }>;\n\n  // for either to activate a previously created pairing\n  public abstract activate(params: { topic: string }): Promise<void>;\n\n  // for both to subscribe on methods requests\n  public abstract register(params: { methods: string[] }): void;\n\n  // for either to update the expiry of an existing pairing.\n  public abstract updateExpiry(params: { topic: string; expiry: number }): Promise<void>;\n\n  // for either to update the metadata of an existing pairing.\n  public abstract updateMetadata(params: {\n    topic: string;\n    metadata: CoreTypes.Metadata;\n  }): Promise<void>;\n\n  // query pairings\n  public abstract getPairings(): PairingTypes.Struct[];\n\n  // for either to ping a peer\n  public abstract ping(params: { topic: string }): Promise<void>;\n\n  // for either peer to disconnect a pairing\n  public abstract disconnect(params: { topic: string }): Promise<void>;\n\n  public abstract formatUriFromPairing(pairing: PairingTypes.Struct): string;\n}\n\nexport interface IPairingPrivate {\n  sendRequest<M extends PairingJsonRpcTypes.WcMethod>(\n    topic: string,\n    method: M,\n    params: PairingJsonRpcTypes.RequestParams[M],\n  ): Promise<number>;\n\n  sendResult<M extends PairingJsonRpcTypes.WcMethod>(\n    id: number,\n    topic: string,\n    result: PairingJsonRpcTypes.Results[M],\n  ): Promise<void>;\n\n  sendError(id: number, topic: string, error: PairingJsonRpcTypes.Error): Promise<void>;\n\n  onRelayEventRequest(event: PairingJsonRpcTypes.EventCallback<JsonRpcRequest>): Promise<void>;\n\n  onRelayEventResponse(event: PairingJsonRpcTypes.EventCallback<JsonRpcResponse>): Promise<void>;\n\n  onPairingPingRequest(\n    topic: string,\n    payload: JsonRpcRequest<PairingJsonRpcTypes.RequestParams[\"wc_pairingPing\"]>,\n  ): Promise<void>;\n\n  onPairingPingResponse(\n    topic: string,\n    payload: JsonRpcResult<PairingJsonRpcTypes.Results[\"wc_pairingPing\"]> | JsonRpcError,\n  ): void;\n\n  onPairingDeleteRequest(\n    topic: string,\n    payload: JsonRpcRequest<PairingJsonRpcTypes.RequestParams[\"wc_pairingDelete\"]>,\n  ): Promise<void>;\n\n  onUnknownRpcMethodRequest(topic: string, payload: JsonRpcRequest): Promise<void>;\n\n  onUnknownRpcMethodResponse(method: string): void;\n\n  deletePairing(topic: string, expirerHasDeleted?: boolean): Promise<void>;\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","export const RELAYER_DEFAULT_PROTOCOL = \"irn\";\n\nexport const RELAYER_DEFAULT_LOGGER = \"error\";\n\nexport const RELAYER_DEFAULT_RELAY_URL = \"wss://relay.walletconnect.org\";\n\nexport const RELAYER_CONTEXT = \"relayer\";\n\nexport const RELAYER_EVENTS = {\n  message: \"relayer_message\",\n  message_ack: \"relayer_message_ack\",\n  connect: \"relayer_connect\",\n  disconnect: \"relayer_disconnect\",\n  error: \"relayer_error\",\n  connection_stalled: \"relayer_connection_stalled\",\n  transport_closed: \"relayer_transport_closed\",\n  publish: \"relayer_publish\",\n};\n\nexport const RELAYER_SUBSCRIBER_SUFFIX = \"_subscription\";\n\nexport const RELAYER_PROVIDER_EVENTS = {\n  payload: \"payload\",\n  connect: \"connect\",\n  disconnect: \"disconnect\",\n  error: \"error\",\n};\n\nexport const RELAYER_RECONNECT_TIMEOUT = 0.1;\n\nexport const RELAYER_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\n// Updated automatically via `new-version` npm script.\n\nexport const RELAYER_SDK_VERSION = \"2.21.0\";\n\n// delay to wait before closing the transport connection after init if not active\nexport const RELAYER_TRANSPORT_CUTOFF = 10_000;\n\nexport const TRANSPORT_TYPES = {\n  link_mode: \"link_mode\",\n  relay: \"relay\",\n} as const;\n\nexport const MESSAGE_DIRECTION = {\n  inbound: \"inbound\",\n  outbound: \"outbound\",\n} as const;\n","import { Logger } from \"@walletconnect/logger\";\n\nexport declare namespace EchoClientTypes {\n  type RegisterDeviceTokenParams = {\n    clientId: string;\n    token: string;\n    notificationType: \"fcm\" | \"apns\" | \"apns-sandbox\" | \"noop\";\n    enableEncrypted?: boolean;\n  };\n}\nexport abstract class IEchoClient {\n  public abstract readonly context: string;\n  constructor(\n    public projectId: string,\n    public logger: Logger,\n  ) {}\n\n  public abstract registerDeviceToken(\n    params: EchoClientTypes.RegisterDeviceTokenParams,\n  ): Promise<void>;\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","export const STORE_STORAGE_VERSION = \"0.3\";\n\nexport const WALLETCONNECT_CLIENT_ID = \"WALLETCONNECT_CLIENT_ID\";\nexport const WALLETCONNECT_LINK_MODE_APPS = \"WALLETCONNECT_LINK_MODE_APPS\";\n","import { Logger } from \"@walletconnect/logger\";\nimport { ICore } from \"./core\";\n\nexport declare namespace EventClientTypes {\n  export interface Event {\n    eventId: string;\n    bundleId: string;\n    timestamp: number;\n    props: Props;\n    addTrace: (trace: string) => void;\n    setError: (error: string) => void;\n  }\n\n  export interface Props {\n    event: string;\n    type: string;\n    properties: Properties;\n  }\n\n  export interface Properties {\n    topic: string;\n    trace: Trace;\n  }\n\n  export type Trace = string[];\n}\n\nexport abstract class IEventClient {\n  public abstract readonly context: string;\n\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    public telemetryEnabled: boolean,\n  ) {}\n\n  public abstract init(): Promise<void>;\n\n  public abstract createEvent(params: {\n    event?: \"ERROR\";\n    type?: string;\n    properties: {\n      topic: string;\n      trace: EventClientTypes.Trace;\n    };\n  }): EventClientTypes.Event;\n\n  public abstract getEvent(params: {\n    eventId?: string;\n    topic?: string;\n  }): EventClientTypes.Event | undefined;\n\n  public abstract deleteEvent(params: { eventId: string }): void;\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super(\n      core,\n      logger,\n      REQUEST_CONTEXT,\n      SIGN_CLIENT_STORAGE_PREFIX,\n      (val: PendingRequestTypes.Struct) => val.id,\n    );\n  }\n}\n","import { THIRTY_DAYS, FIVE_SECONDS } from \"@walletconnect/time\";\n\nexport const SUBSCRIBER_EVENTS = {\n  created: \"subscription_created\",\n  deleted: \"subscription_deleted\",\n  expired: \"subscription_expired\",\n  disabled: \"subscription_disabled\",\n  sync: \"subscription_sync\",\n  resubscribed: \"subscription_resubscribed\",\n};\n\nexport const SUBSCRIBER_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const SUBSCRIBER_CONTEXT = \"subscription\";\n\nexport const SUBSCRIBER_STORAGE_VERSION = \"0.3\";\n\nexport const PENDING_SUB_RESOLUTION_TIMEOUT = FIVE_SECONDS * 1000;\n","import { Logger } from \"@walletconnect/logger\";\nimport EventEmmiter from \"events\";\nimport { CoreTypes, ICore } from \"../core/core\";\nimport { IEngine } from \"./engine\";\nimport { IPendingRequest } from \"./pendingRequest\";\nimport { IProposal, ProposalTypes } from \"./proposal\";\nimport { ISession, SessionTypes } from \"./session\";\nimport { Verify } from \"../core/verify\";\nimport { IAuth, AuthTypes } from \"./auth\";\nimport { RelayerTypes } from \"../core\";\n\nexport declare namespace SignClientTypes {\n  type Event =\n    | \"session_proposal\"\n    | \"session_update\"\n    | \"session_extend\"\n    | \"session_ping\"\n    | \"session_delete\"\n    | \"session_expire\"\n    | \"session_request\"\n    | \"session_request_sent\"\n    | \"session_event\"\n    | \"session_authenticate\"\n    | \"proposal_expire\"\n    | \"session_request_expire\"\n    | \"session_connect\";\n\n  interface BaseEventArgs<T = unknown> {\n    id: number;\n    topic: string;\n    params: T;\n  }\n  interface EventArguments {\n    session_proposal: {\n      verifyContext: Verify.Context;\n    } & Omit<BaseEventArgs<ProposalTypes.Struct>, \"topic\">;\n    session_update: BaseEventArgs<{ namespaces: SessionTypes.Namespaces }>;\n    session_extend: Omit<BaseEventArgs, \"params\">;\n    session_ping: Omit<BaseEventArgs, \"params\">;\n    session_delete: Omit<BaseEventArgs, \"params\">;\n    session_expire: { topic: string };\n    session_request: {\n      verifyContext: Verify.Context;\n    } & BaseEventArgs<{\n      request: { method: string; params: any; expiryTimestamp?: number };\n      chainId: string;\n    }>;\n    session_request_sent: {\n      request: { method: string; params: any };\n      topic: string;\n      chainId: string;\n      id: number;\n    };\n    session_event: BaseEventArgs<{\n      event: { name: string; data: any };\n      chainId: string;\n    }>;\n    session_authenticate: {\n      verifyContext: Verify.Context;\n      transportType?: RelayerTypes.TransportType;\n    } & BaseEventArgs<AuthTypes.AuthRequestEventArgs>;\n    proposal_expire: { id: number };\n    session_request_expire: { id: number };\n    session_connect: { session: SessionTypes.Struct };\n  }\n\n  type Metadata = CoreTypes.Metadata;\n\n  type SignConfig = {\n    disableRequestQueue?: boolean;\n  };\n\n  interface Options extends CoreTypes.Options {\n    core?: ICore;\n    metadata?: Metadata;\n    signConfig?: SignConfig;\n  }\n}\n\nexport abstract class ISignClientEvents extends EventEmmiter {\n  constructor() {\n    super();\n  }\n\n  public abstract emit: <E extends SignClientTypes.Event>(\n    event: E,\n    args: SignClientTypes.EventArguments[E],\n  ) => boolean;\n\n  public abstract on: <E extends SignClientTypes.Event>(\n    event: E,\n    listener: (args: SignClientTypes.EventArguments[E]) => any,\n  ) => this;\n\n  public abstract once: <E extends SignClientTypes.Event>(\n    event: E,\n    listener: (args: SignClientTypes.EventArguments[E]) => any,\n  ) => this;\n\n  public abstract off: <E extends SignClientTypes.Event>(\n    event: E,\n    listener: (args: SignClientTypes.EventArguments[E]) => any,\n  ) => this;\n\n  public abstract removeListener: <E extends SignClientTypes.Event>(\n    event: E,\n    listener: (args: SignClientTypes.EventArguments[E]) => any,\n  ) => this;\n\n  public abstract removeAllListeners: <E extends SignClientTypes.Event>(event: E) => this;\n}\n\nexport abstract class ISignClient {\n  public readonly protocol = \"wc\";\n  public readonly version = 2;\n\n  public abstract readonly name: string;\n  public abstract readonly context: string;\n  public abstract readonly metadata: SignClientTypes.Metadata;\n\n  public abstract core: ICore;\n  public abstract logger: Logger;\n  public abstract events: ISignClientEvents;\n  public abstract engine: IEngine;\n  public abstract session: ISession;\n  public abstract proposal: IProposal;\n  public abstract pendingRequest: IPendingRequest;\n  public abstract auth: IAuth;\n  public abstract signConfig?: SignClientTypes.SignConfig;\n\n  constructor(public opts?: SignClientTypes.Options) {}\n\n  public abstract connect: IEngine[\"connect\"];\n  public abstract pair: IEngine[\"pair\"];\n  public abstract approve: IEngine[\"approve\"];\n  public abstract reject: IEngine[\"reject\"];\n  public abstract update: IEngine[\"update\"];\n  public abstract extend: IEngine[\"extend\"];\n  public abstract request: IEngine[\"request\"];\n  public abstract respond: IEngine[\"respond\"];\n  public abstract ping: IEngine[\"ping\"];\n  public abstract emit: IEngine[\"emit\"];\n  public abstract disconnect: IEngine[\"disconnect\"];\n  public abstract find: IEngine[\"find\"];\n  public abstract getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"];\n  public abstract authenticate: IEngine[\"authenticate\"];\n  public abstract formatAuthMessage: IEngine[\"formatAuthMessage\"];\n  public abstract approveSessionAuthenticate: IEngine[\"approveSessionAuthenticate\"];\n  public abstract rejectSessionAuthenticate: IEngine[\"rejectSessionAuthenticate\"];\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore } from \"@walletconnect/types\";\n\nimport { AUTH_KEYS_CONTEXT, AUTH_STORAGE_PREFIX, AUTH_PUBLIC_KEY_NAME } from \"../constants\";\n\nexport class AuthKey extends Store<string, { responseTopic: string; publicKey: string }> {\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super(core, logger, AUTH_KEYS_CONTEXT, AUTH_STORAGE_PREFIX, () => AUTH_PUBLIC_KEY_NAME);\n  }\n}\n","import { THIRTY_DAYS, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { RelayerTypes, PairingJsonRpcTypes } from \"@walletconnect/types\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_STORAGE_VERSION = \"0.3\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const PAIRING_RPC_OPTS: Record<\n  PairingJsonRpcTypes.WcMethod | \"unregistered_method\",\n  {\n    req: RelayerTypes.PublishOptions;\n    res: RelayerTypes.PublishOptions;\n  }\n> = {\n  wc_pairingDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  unregistered_method: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n  },\n};\n\nexport const PAIRING_EVENTS = {\n  create: \"pairing_create\",\n  expire: \"pairing_expire\",\n  delete: \"pairing_delete\",\n  ping: \"pairing_ping\",\n};\n","import {\n  JsonRpcResponse,\n  JsonRpcRequest,\n  ErrorResponse,\n  JsonRpcResult,\n  JsonRpcError,\n} from \"@walletconnect/jsonrpc-types\";\nimport { ISignClient } from \"./client\";\nimport { RelayerTypes } from \"../core/relayer\";\nimport { SessionTypes } from \"./session\";\nimport { ProposalTypes } from \"./proposal\";\nimport { PairingTypes } from \"../core/pairing\";\nimport { JsonRpcTypes } from \"./jsonrpc\";\nimport { EventEmitter } from \"events\";\nimport { PendingRequestTypes } from \"./pendingRequest\";\nimport { AuthTypes } from \"./auth\";\nimport { CryptoTypes } from \"../core\";\n\nexport declare namespace EngineTypes {\n  type Event =\n    | \"session_connect\"\n    | \"session_approve\"\n    | \"session_update\"\n    | \"session_extend\"\n    | \"session_ping\"\n    | \"pairing_ping\"\n    | \"session_request\";\n\n  interface EventArguments {\n    session_connect: {\n      error?: ErrorResponse;\n      session?: SessionTypes.Struct;\n    };\n    session_approve: { error?: ErrorResponse };\n    session_update: { error?: ErrorResponse };\n    session_extend: { error?: ErrorResponse };\n    session_ping: { error?: ErrorResponse };\n    pairing_ping: { error?: ErrorResponse };\n    session_request: { error?: ErrorResponse; result?: any };\n  }\n\n  interface UriParameters {\n    protocol: string;\n    version: number;\n    topic: string;\n    symKey: string;\n    relay: RelayerTypes.ProtocolOptions;\n    methods?: string[];\n    expiryTimestamp?: number;\n  }\n\n  interface EventCallback<T extends JsonRpcRequest | JsonRpcResponse> {\n    topic: string;\n    payload: T;\n    transportType?: RelayerTypes.MessageEvent[\"transportType\"];\n    attestation?: string;\n    encryptedId?: string;\n  }\n\n  interface ConnectParams {\n    /**\n     * @deprecated Use `optionalNamespaces` instead.\n     */\n    requiredNamespaces?: ProposalTypes.RequiredNamespaces;\n    optionalNamespaces?: ProposalTypes.OptionalNamespaces;\n    sessionProperties?: ProposalTypes.SessionProperties;\n    scopedProperties?: ProposalTypes.ScopedProperties;\n    pairingTopic?: string;\n    relays?: RelayerTypes.ProtocolOptions[];\n  }\n\n  interface PairParams {\n    uri: string;\n  }\n\n  interface ApproveParams {\n    id: number;\n    namespaces: SessionTypes.Namespaces;\n    sessionProperties?: ProposalTypes.SessionProperties;\n    scopedProperties?: ProposalTypes.ScopedProperties;\n    sessionConfig?: SessionTypes.SessionConfig;\n    relayProtocol?: string;\n  }\n\n  interface RejectParams {\n    id: number;\n    reason: ErrorResponse;\n  }\n\n  interface UpdateParams {\n    topic: string;\n    namespaces: SessionTypes.Namespaces;\n  }\n\n  interface ExtendParams {\n    topic: string;\n  }\n\n  interface RequestParams {\n    topic: string;\n    request: {\n      method: string;\n      params: any;\n    };\n    chainId: string;\n    expiry?: number;\n  }\n\n  interface RespondParams {\n    topic: string;\n    response: JsonRpcResponse;\n  }\n\n  interface EmitParams {\n    topic: string;\n    event: {\n      name: string;\n      data: any;\n    };\n    chainId: string;\n  }\n\n  interface PingParams {\n    topic: string;\n  }\n\n  interface DisconnectParams {\n    topic: string;\n    reason: ErrorResponse;\n  }\n\n  interface FindParams {\n    requiredNamespaces: ProposalTypes.RequiredNamespaces;\n  }\n\n  type AcknowledgedPromise = Promise<{ acknowledged: () => Promise<void> }>;\n\n  type SessionAuthenticateResponsePromise = {\n    uri: string;\n    response: () => Promise<AuthTypes.AuthenticateResponseResult>;\n  };\n\n  interface RpcOpts {\n    req: RelayerTypes.PublishOptions & {\n      ttl: number;\n    };\n    res: RelayerTypes.PublishOptions & {\n      ttl: number;\n    };\n    reject?: RelayerTypes.PublishOptions & {\n      ttl: number;\n    };\n    autoReject?: RelayerTypes.PublishOptions & {\n      ttl: number;\n    };\n  }\n\n  type RpcOptsMap = Record<JsonRpcTypes.WcMethod, RpcOpts>;\n\n  type EngineQueue<T> = {\n    state: \"IDLE\" | \"ACTIVE\";\n    queue: T[];\n  };\n}\n\nexport abstract class IEngineEvents extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  public abstract emit: <E extends EngineTypes.Event>(\n    event: string,\n    args: EngineTypes.EventArguments[E],\n  ) => boolean;\n\n  public abstract once: <E extends EngineTypes.Event>(\n    event: string,\n    listener: (args: EngineTypes.EventArguments[E]) => any,\n  ) => this;\n}\n\n// -- private method interface -------------------------------------- //\n\nexport interface EnginePrivate {\n  sendRequest<M extends JsonRpcTypes.WcMethod>(args: {\n    topic: string;\n    method: M;\n    params: JsonRpcTypes.RequestParams[M];\n    expiry?: number;\n    relayRpcId?: number;\n    clientRpcId?: number;\n    throwOnFailedPublish?: boolean;\n    appLink?: string;\n    tvf?: RelayerTypes.ITVF;\n  }): Promise<number>;\n\n  sendResult<M extends JsonRpcTypes.WcMethod>(args: {\n    id: number;\n    topic: string;\n    result: JsonRpcTypes.Results[M];\n    throwOnFailedPublish?: boolean;\n    encodeOpts?: CryptoTypes.EncodeOptions;\n    appLink?: string;\n  }): Promise<void>;\n\n  sendError(params: {\n    id: number;\n    topic: string;\n    error: JsonRpcTypes.Error;\n    encodeOpts?: CryptoTypes.EncodeOptions;\n    rpcOpts?: RelayerTypes.PublishOptions;\n    appLink?: string;\n  }): Promise<void>;\n\n  onRelayEventRequest(event: EngineTypes.EventCallback<JsonRpcRequest>): Promise<void>;\n\n  onRelayEventResponse(event: EngineTypes.EventCallback<JsonRpcResponse>): Promise<void>;\n\n  onRelayEventUnknownPayload(event: EngineTypes.EventCallback<any>): Promise<void>;\n\n  shouldIgnorePairingRequest(params: { topic: string; requestMethod: string }): boolean;\n\n  deleteSession(params: {\n    topic: string;\n    expirerHasDeleted?: boolean;\n    id?: number;\n    emitEvent?: boolean;\n  }): Promise<void>;\n\n  deleteProposal(id: number, expirerHasDeleted?: boolean): Promise<void>;\n\n  setExpiry(topic: string, expiry: number): Promise<void>;\n\n  setProposal(id: number, proposal: ProposalTypes.Struct): Promise<void>;\n\n  setAuthRequest(\n    id: number,\n    params: {\n      request: AuthTypes.SessionAuthenticateRequest;\n      pairingTopic: string;\n      transportType?: RelayerTypes.MessageEvent[\"transportType\"];\n    },\n  ): Promise<void>;\n\n  setPendingSessionRequest(pendingRequest: PendingRequestTypes.Struct): Promise<void>;\n\n  deletePendingSessionRequest(\n    id: number,\n    reason: ErrorResponse,\n    expirerHasDeleted?: boolean,\n  ): Promise<void>;\n\n  deletePendingAuthRequest(\n    id: number,\n    reason: ErrorResponse,\n    expirerHasDeleted?: boolean,\n  ): Promise<void>;\n\n  cleanupDuplicatePairings(session: SessionTypes.Struct): Promise<void>;\n\n  cleanup(): Promise<void>;\n\n  onSessionProposeRequest(params: {\n    topic: string;\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionPropose\"]>;\n    attestation?: string;\n    encryptedId?: string;\n  }): Promise<void>;\n\n  onSessionProposeResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionPropose\"]> | JsonRpcError,\n    transportType?: RelayerTypes.MessageEvent[\"transportType\"],\n  ): Promise<void>;\n\n  onSessionSettleRequest(\n    topic: string,\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionSettle\"]>,\n  ): Promise<void>;\n\n  onSessionSettleResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionSettle\"]> | JsonRpcError,\n  ): Promise<void>;\n\n  onSessionUpdateRequest(\n    topic: string,\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionUpdate\"]>,\n  ): Promise<void>;\n\n  onSessionUpdateResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionUpdate\"]> | JsonRpcError,\n  ): void;\n\n  onSessionExtendRequest(\n    topic: string,\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionExtend\"]>,\n  ): Promise<void>;\n\n  onSessionExtendResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionExtend\"]> | JsonRpcError,\n  ): void;\n\n  onSessionPingRequest(\n    topic: string,\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionPing\"]>,\n  ): Promise<void>;\n\n  onSessionPingResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionPing\"]> | JsonRpcError,\n  ): void;\n\n  onSessionDeleteRequest(\n    topic: string,\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionDelete\"]>,\n  ): Promise<void>;\n\n  onSessionRequest(params: {\n    topic: string;\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionRequest\"]>;\n    transportType?: RelayerTypes.MessageEvent[\"transportType\"];\n    attestation?: string;\n    encryptedId?: string;\n  }): Promise<void>;\n\n  onSessionRequestResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionRequest\"]> | JsonRpcError,\n  ): void;\n\n  onSessionEventRequest(\n    topic: string,\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionEvent\"]>,\n  ): Promise<void>;\n\n  onSessionAuthenticateRequest(params: {\n    topic: string;\n    payload: JsonRpcRequest<JsonRpcTypes.RequestParams[\"wc_sessionAuthenticate\"]>;\n    transportType?: RelayerTypes.MessageEvent[\"transportType\"];\n    attestation?: string;\n    encryptedId?: string;\n  }): Promise<void>;\n\n  onSessionAuthenticateResponse(\n    topic: string,\n    payload: JsonRpcResult<JsonRpcTypes.Results[\"wc_sessionAuthenticate\"]> | JsonRpcError,\n  ): void;\n\n  // -- Validators ---------------------------------------------------- //\n  isValidConnect(params: EngineTypes.ConnectParams): Promise<void>;\n\n  isValidSessionSettleRequest(params: JsonRpcTypes.RequestParams[\"wc_sessionSettle\"]): void;\n\n  isValidApprove(params: EngineTypes.ApproveParams): Promise<void>;\n\n  isValidReject(params: EngineTypes.RejectParams): Promise<void>;\n\n  isValidUpdate(params: EngineTypes.UpdateParams): Promise<void>;\n\n  isValidExtend(params: EngineTypes.ExtendParams): Promise<void>;\n\n  isValidRequest(params: EngineTypes.RequestParams): Promise<void>;\n\n  isValidRespond(params: EngineTypes.RespondParams): Promise<void>;\n\n  isValidPing(params: EngineTypes.PingParams): Promise<void>;\n\n  isValidEmit(params: EngineTypes.EmitParams): Promise<void>;\n\n  isValidDisconnect(params: EngineTypes.DisconnectParams): Promise<void>;\n}\n\n// -- class interface ----------------------------------------------- //\n\nexport abstract class IEngine {\n  constructor(public client: ISignClient) {}\n\n  public abstract init(): Promise<void>;\n\n  public abstract connect(\n    params: EngineTypes.ConnectParams,\n  ): Promise<{ uri?: string; approval: () => Promise<SessionTypes.Struct> }>;\n\n  public abstract pair(params: EngineTypes.PairParams): Promise<PairingTypes.Struct>;\n\n  public abstract approve(\n    params: EngineTypes.ApproveParams,\n  ): Promise<{ topic: string; acknowledged: () => Promise<SessionTypes.Struct> }>;\n\n  public abstract reject(params: EngineTypes.RejectParams): Promise<void>;\n\n  public abstract update(params: EngineTypes.UpdateParams): EngineTypes.AcknowledgedPromise;\n\n  public abstract extend(params: EngineTypes.ExtendParams): EngineTypes.AcknowledgedPromise;\n\n  public abstract request<T>(params: EngineTypes.RequestParams): Promise<T>;\n\n  public abstract respond(params: EngineTypes.RespondParams): Promise<void>;\n\n  public abstract emit(params: EngineTypes.EmitParams): Promise<void>;\n\n  public abstract ping(params: EngineTypes.PingParams): Promise<void>;\n\n  public abstract disconnect(params: EngineTypes.DisconnectParams): Promise<void>;\n\n  public abstract find: (params: EngineTypes.FindParams) => SessionTypes.Struct[];\n\n  public abstract getPendingSessionRequests: () => PendingRequestTypes.Struct[];\n\n  public abstract authenticate: (\n    params: AuthTypes.SessionAuthenticateParams,\n    walletUniversalLink?: string,\n  ) => Promise<EngineTypes.SessionAuthenticateResponsePromise>;\n\n  public abstract approveSessionAuthenticate: (\n    params: AuthTypes.ApproveSessionAuthenticateParams,\n  ) => Promise<{ session: SessionTypes.Struct | undefined }>;\n\n  public abstract formatAuthMessage: (params: {\n    request: AuthTypes.BaseAuthRequestParams;\n    iss: string;\n  }) => string;\n\n  public abstract rejectSessionAuthenticate(params: EngineTypes.RejectParams): Promise<void>;\n\n  public abstract processRelayMessageCache(): void;\n}\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore } from \"@walletconnect/types\";\n\nimport { AUTH_PAIRING_TOPIC_CONTEXT, AUTH_STORAGE_PREFIX } from \"../constants\";\n\nexport class AuthPairingTopic extends Store<string, { topic: string; pairingTopic: string }> {\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super(core, logger, AUTH_PAIRING_TOPIC_CONTEXT, AUTH_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { AuthTypes, ICore } from \"@walletconnect/types\";\n\nimport { AUTH_STORAGE_PREFIX, AUTH_REQUEST_CONTEXT } from \"../constants\";\n\nexport class AuthRequest extends Store<number, AuthTypes.PendingRequest> {\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    super(\n      core,\n      logger,\n      AUTH_REQUEST_CONTEXT,\n      AUTH_STORAGE_PREFIX,\n      (val: AuthTypes.PendingRequest) => val.id,\n    );\n  }\n}\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","export const VERIFY_CONTEXT = \"verify-api\";\n\nconst VERIFY_SERVER_COM = \"https://verify.walletconnect.com\";\nconst VERIFY_SERVER_ORG = \"https://verify.walletconnect.org\";\nexport const VERIFY_SERVER = VERIFY_SERVER_ORG;\nexport const VERIFY_SERVER_V3 = `${VERIFY_SERVER}/v3`;\n\nexport const TRUSTED_VERIFY_URLS = [VERIFY_SERVER_COM, VERIFY_SERVER_ORG];\n","import { Logger } from \"@walletconnect/logger\";\nimport { IAuth, ICore } from \"@walletconnect/types\";\nimport { AuthPairingTopic } from \"./authPairingTopic\";\nimport { AuthRequest } from \"./authRequest\";\nimport { AuthKey } from \"./authKey\";\n\nexport class AuthStore {\n  public authKeys: IAuth[\"authKeys\"];\n  public pairingTopics: IAuth[\"pairingTopics\"];\n  public requests: IAuth[\"requests\"];\n\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n  ) {\n    this.authKeys = new AuthKey(this.core, this.logger);\n    this.pairingTopics = new AuthPairingTopic(this.core, this.logger);\n    this.requests = new AuthRequest(this.core, this.logger);\n  }\n\n  public async init() {\n    await this.authKeys.init();\n    await this.pairingTopics.init();\n    await this.requests.init();\n  }\n}\n","export const ECHO_CONTEXT = \"echo\";\n\nexport const ECHO_URL = \"https://echo.walletconnect.com\";\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\nimport { populateAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { AuthStore, Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n  public auth: ISignClient[\"auth\"];\n  public signConfig?: ISignClient[\"signConfig\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = populateAppMetadata(opts?.metadata);\n    this.signConfig = opts?.signConfig;\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n    this.auth = new AuthStore(this.core, this.logger);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public authenticate: ISignClient[\"authenticate\"] = async (params, walletUniversalLink) => {\n    try {\n      return await this.engine.authenticate(params, walletUniversalLink);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public formatAuthMessage: ISignClient[\"formatAuthMessage\"] = (params) => {\n    try {\n      return this.engine.formatAuthMessage(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approveSessionAuthenticate: ISignClient[\"approveSessionAuthenticate\"] = async (params) => {\n    try {\n      return await this.engine.approveSessionAuthenticate(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public rejectSessionAuthenticate: ISignClient[\"rejectSessionAuthenticate\"] = async (params) => {\n    try {\n      return await this.engine.rejectSessionAuthenticate(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.auth.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initialization Success`);\n      setTimeout(() => {\n        this.engine.processRelayMessageCache();\n      }, toMiliseconds(ONE_SECOND));\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","export const EVENT_CLIENT_CONTEXT = \"event-client\";\n\nexport const EVENT_CLIENT_PAIRING_TRACES = {\n  pairing_started: \"pairing_started\",\n  pairing_uri_validation_success: \"pairing_uri_validation_success\",\n  pairing_uri_not_expired: \"pairing_uri_not_expired\",\n  store_new_pairing: \"store_new_pairing\",\n  subscribing_pairing_topic: \"subscribing_pairing_topic\",\n  subscribe_pairing_topic_success: \"subscribe_pairing_topic_success\",\n  existing_pairing: \"existing_pairing\",\n  pairing_not_expired: \"pairing_not_expired\",\n  emit_inactive_pairing: \"emit_inactive_pairing\",\n  emit_session_proposal: \"emit_session_proposal\",\n  subscribing_to_pairing_topic: \"subscribing_to_pairing_topic\",\n};\n\nexport const EVENT_CLIENT_PAIRING_ERRORS = {\n  no_wss_connection: \"no_wss_connection\",\n  no_internet_connection: \"no_internet_connection\",\n  malformed_pairing_uri: \"malformed_pairing_uri\",\n  active_pairing_already_exists: \"active_pairing_already_exists\",\n  subscribe_pairing_topic_failure: \"subscribe_pairing_topic_failure\",\n  pairing_expired: \"pairing_expired\",\n  proposal_expired: \"proposal_expired\",\n  proposal_listener_not_found: \"proposal_listener_not_found\",\n};\n\nexport const EVENT_CLIENT_SESSION_TRACES = {\n  session_approve_started: \"session_approve_started\",\n  proposal_not_expired: \"proposal_not_expired\",\n  session_namespaces_validation_success: \"session_namespaces_validation_success\",\n  create_session_topic: \"create_session_topic\",\n  subscribing_session_topic: \"subscribing_session_topic\",\n  subscribe_session_topic_success: \"subscribe_session_topic_success\",\n  publishing_session_approve: \"publishing_session_approve\",\n  session_approve_publish_success: \"session_approve_publish_success\",\n  store_session: \"store_session\",\n  publishing_session_settle: \"publishing_session_settle\",\n  session_settle_publish_success: \"session_settle_publish_success\",\n};\n\nexport const EVENT_CLIENT_SESSION_ERRORS = {\n  no_internet_connection: \"no_internet_connection\",\n  no_wss_connection: \"no_wss_connection\",\n  proposal_expired: \"proposal_expired\",\n  subscribe_session_topic_failure: \"subscribe_session_topic_failure\",\n  session_approve_publish_failure: \"session_approve_publish_failure\",\n  session_settle_publish_failure: \"session_settle_publish_failure\",\n  session_approve_namespace_validation_failure: \"session_approve_namespace_validation_failure\",\n  proposal_not_found: \"proposal_not_found\",\n};\n\nexport const EVENT_CLIENT_AUTHENTICATE_TRACES = {\n  authenticated_session_approve_started: \"authenticated_session_approve_started\",\n  authenticated_session_not_expired: \"authenticated_session_not_expired\",\n  chains_caip2_compliant: \"chains_caip2_compliant\",\n  chains_evm_compliant: \"chains_evm_compliant\",\n  create_authenticated_session_topic: \"create_authenticated_session_topic\",\n  cacaos_verified: \"cacaos_verified\",\n  store_authenticated_session: \"store_authenticated_session\",\n  subscribing_authenticated_session_topic: \"subscribing_authenticated_session_topic\",\n  subscribe_authenticated_session_topic_success: \"subscribe_authenticated_session_topic_success\",\n  publishing_authenticated_session_approve: \"publishing_authenticated_session_approve\",\n  authenticated_session_approve_publish_success: \"authenticated_session_approve_publish_success\",\n};\n\nexport const EVENT_CLIENT_AUTHENTICATE_ERRORS = {\n  no_internet_connection: \"no_internet_connection\",\n  no_wss_connection: \"no_wss_connection\",\n  missing_session_authenticate_request: \"missing_session_authenticate_request\",\n  session_authenticate_request_expired: \"session_authenticate_request_expired\",\n  chains_caip2_compliant_failure: \"chains_caip2_compliant_failure\",\n  chains_evm_compliant_failure: \"chains_evm_compliant_failure\",\n  invalid_cacao: \"invalid_cacao\",\n  subscribe_authenticated_session_topic_failure: \"subscribe_authenticated_session_topic_failure\",\n  authenticated_session_approve_publish_failure: \"authenticated_session_approve_publish_failure\",\n  authenticated_session_pending_request_not_found:\n    \"authenticated_session_pending_request_not_found\",\n};\n\nexport const EVENTS_STORAGE_VERSION = 0.1;\n\nexport const EVENTS_STORAGE_CONTEXT = \"event-client\";\n\nexport const EVENTS_STORAGE_CLEANUP_INTERVAL = 86400;\n\nexport const EVENTS_CLIENT_API_URL = \"https://pulse.walletconnect.org/batch\";\n","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\n\nexport { isObjectLike };\n","function getSymbols(object) {\n    return Object.getOwnPropertySymbols(object).filter(symbol => Object.prototype.propertyIsEnumerable.call(object, symbol));\n}\n\nexport { getSymbols };\n","function getTag(value) {\n    if (value == null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]';\n    }\n    return Object.prototype.toString.call(value);\n}\n\nexport { getTag };\n","const regexpTag = '[object RegExp]';\nconst stringTag = '[object String]';\nconst numberTag = '[object Number]';\nconst booleanTag = '[object Boolean]';\nconst argumentsTag = '[object Arguments]';\nconst symbolTag = '[object Symbol]';\nconst dateTag = '[object Date]';\nconst mapTag = '[object Map]';\nconst setTag = '[object Set]';\nconst arrayTag = '[object Array]';\nconst functionTag = '[object Function]';\nconst arrayBufferTag = '[object ArrayBuffer]';\nconst objectTag = '[object Object]';\nconst errorTag = '[object Error]';\nconst dataViewTag = '[object DataView]';\nconst uint8ArrayTag = '[object Uint8Array]';\nconst uint8ClampedArrayTag = '[object Uint8ClampedArray]';\nconst uint16ArrayTag = '[object Uint16Array]';\nconst uint32ArrayTag = '[object Uint32Array]';\nconst bigUint64ArrayTag = '[object BigUint64Array]';\nconst int8ArrayTag = '[object Int8Array]';\nconst int16ArrayTag = '[object Int16Array]';\nconst int32ArrayTag = '[object Int32Array]';\nconst bigInt64ArrayTag = '[object BigInt64Array]';\nconst float32ArrayTag = '[object Float32Array]';\nconst float64ArrayTag = '[object Float64Array]';\n\nexport { argumentsTag, arrayBufferTag, arrayTag, bigInt64ArrayTag, bigUint64ArrayTag, booleanTag, dataViewTag, dateTag, errorTag, float32ArrayTag, float64ArrayTag, functionTag, int16ArrayTag, int32ArrayTag, int8ArrayTag, mapTag, numberTag, objectTag, regexpTag, setTag, stringTag, symbolTag, uint16ArrayTag, uint32ArrayTag, uint8ArrayTag, uint8ClampedArrayTag };\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { getSymbols } from '../compat/_internal/getSymbols.mjs';\nimport { getTag } from '../compat/_internal/getTag.mjs';\nimport { uint32ArrayTag, uint16ArrayTag, uint8ClampedArrayTag, uint8ArrayTag, symbolTag, stringTag, setTag, regexpTag, objectTag, numberTag, mapTag, int32ArrayTag, int16ArrayTag, int8ArrayTag, float64ArrayTag, float32ArrayTag, dateTag, booleanTag, dataViewTag, arrayBufferTag, arrayTag, argumentsTag } from '../compat/_internal/tags.mjs';\nimport { isPrimitive } from '../predicate/isPrimitive.mjs';\nimport { isTypedArray } from '../predicate/isTypedArray.mjs';\n\nfunction cloneDeepWith(obj, cloneValue) {\n    return cloneDeepWithImpl(obj, undefined, obj, new Map(), cloneValue);\n}\nfunction cloneDeepWithImpl(valueToClone, keyToClone, objectToClone, stack = new Map(), cloneValue = undefined) {\n    const cloned = cloneValue?.(valueToClone, keyToClone, objectToClone, stack);\n    if (cloned != null) {\n        return cloned;\n    }\n    if (isPrimitive(valueToClone)) {\n        return valueToClone;\n    }\n    if (stack.has(valueToClone)) {\n        return stack.get(valueToClone);\n    }\n    if (Array.isArray(valueToClone)) {\n        const result = new Array(valueToClone.length);\n        stack.set(valueToClone, result);\n        for (let i = 0; i < valueToClone.length; i++) {\n            result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n        }\n        if (Object.hasOwn(valueToClone, 'index')) {\n            result.index = valueToClone.index;\n        }\n        if (Object.hasOwn(valueToClone, 'input')) {\n            result.input = valueToClone.input;\n        }\n        return result;\n    }\n    if (valueToClone instanceof Date) {\n        return new Date(valueToClone.getTime());\n    }\n    if (valueToClone instanceof RegExp) {\n        const result = new RegExp(valueToClone.source, valueToClone.flags);\n        result.lastIndex = valueToClone.lastIndex;\n        return result;\n    }\n    if (valueToClone instanceof Map) {\n        const result = new Map();\n        stack.set(valueToClone, result);\n        for (const [key, value] of valueToClone) {\n            result.set(key, cloneDeepWithImpl(value, key, objectToClone, stack, cloneValue));\n        }\n        return result;\n    }\n    if (valueToClone instanceof Set) {\n        const result = new Set();\n        stack.set(valueToClone, result);\n        for (const value of valueToClone) {\n            result.add(cloneDeepWithImpl(value, undefined, objectToClone, stack, cloneValue));\n        }\n        return result;\n    }\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(valueToClone)) {\n        return valueToClone.subarray();\n    }\n    if (isTypedArray(valueToClone)) {\n        const result = new (Object.getPrototypeOf(valueToClone).constructor)(valueToClone.length);\n        stack.set(valueToClone, result);\n        for (let i = 0; i < valueToClone.length; i++) {\n            result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n        }\n        return result;\n    }\n    if (valueToClone instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && valueToClone instanceof SharedArrayBuffer)) {\n        return valueToClone.slice(0);\n    }\n    if (valueToClone instanceof DataView) {\n        const result = new DataView(valueToClone.buffer.slice(0), valueToClone.byteOffset, valueToClone.byteLength);\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (typeof File !== 'undefined' && valueToClone instanceof File) {\n        const result = new File([valueToClone], valueToClone.name, {\n            type: valueToClone.type,\n        });\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (valueToClone instanceof Blob) {\n        const result = new Blob([valueToClone], { type: valueToClone.type });\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (valueToClone instanceof Error) {\n        const result = new valueToClone.constructor();\n        stack.set(valueToClone, result);\n        result.message = valueToClone.message;\n        result.name = valueToClone.name;\n        result.stack = valueToClone.stack;\n        result.cause = valueToClone.cause;\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (typeof valueToClone === 'object' && isCloneableObject(valueToClone)) {\n        const result = Object.create(Object.getPrototypeOf(valueToClone));\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    return valueToClone;\n}\nfunction copyProperties(target, source, objectToClone = target, stack, cloneValue) {\n    const keys = [...Object.keys(source), ...getSymbols(source)];\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const descriptor = Object.getOwnPropertyDescriptor(target, key);\n        if (descriptor == null || descriptor.writable) {\n            target[key] = cloneDeepWithImpl(source[key], key, objectToClone, stack, cloneValue);\n        }\n    }\n}\nfunction isCloneableObject(object) {\n    switch (getTag(object)) {\n        case argumentsTag:\n        case arrayTag:\n        case arrayBufferTag:\n        case dataViewTag:\n        case booleanTag:\n        case dateTag:\n        case float32ArrayTag:\n        case float64ArrayTag:\n        case int8ArrayTag:\n        case int16ArrayTag:\n        case int32ArrayTag:\n        case mapTag:\n        case numberTag:\n        case objectTag:\n        case regexpTag:\n        case setTag:\n        case stringTag:\n        case symbolTag:\n        case uint8ArrayTag:\n        case uint8ClampedArrayTag:\n        case uint16ArrayTag:\n        case uint32ArrayTag: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nexport { cloneDeepWith, cloneDeepWithImpl, copyProperties };\n","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { abytes, aexists, anumber, aoutput } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { byteSwap32, Hash, isLE, toBytes, u32, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { cloneDeepWith as cloneDeepWith$1, copyProperties } from '../../object/cloneDeepWith.mjs';\nimport { argumentsTag, booleanTag, stringTag, numberTag } from '../_internal/tags.mjs';\n\nfunction cloneDeepWith(obj, cloneValue) {\n    return cloneDeepWith$1(obj, (value, key, object, stack) => {\n        const cloned = cloneValue?.(value, key, object, stack);\n        if (cloned != null) {\n            return cloned;\n        }\n        if (typeof obj !== 'object') {\n            return undefined;\n        }\n        switch (Object.prototype.toString.call(obj)) {\n            case numberTag:\n            case stringTag:\n            case booleanTag: {\n                const result = new obj.constructor(obj?.valueOf());\n                copyProperties(result, obj);\n                return result;\n            }\n            case argumentsTag: {\n                const result = {};\n                copyProperties(result, obj);\n                result.length = obj.length;\n                result[Symbol.iterator] = obj[Symbol.iterator];\n                return result;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    });\n}\n\nexport { cloneDeepWith };\n"],"names":["core","CAIP_DELIMITER","namespace","chain","reference","params","THIRTY_DAYS","getDocument","getNavigator","_a","e","queryString","newQueryParams","urlSearchParams","key","value","metadata","_b","appMetadata","icon","__spreadProps","__spreadValues","error","getWindowMetadata","protocol","version","env","getLocation","OS","Version","info","detect","os","sdkVersion","id","relayUrl","auth","projectId","useOnCloseEvent","bundleId","packageName","splitUrl","ua","url","domain","obj","type","context","depth","a","b","x","arr","map","cb","res","word","c","str","w","expiry","FIVE_MINUTES","expireErrorMessage","timeout","toMiliseconds","cacheResolve","cacheReject","cacheTimeout","result","promiseResolve","promiseReject","err","promise","resolve","reject","topic","target","parsed","ttl","now","fromMiliseconds","event","wcDeepLink","json","deeplink","link","requestId","sessionTopic","payload","startApp","storage","arr1","arr2","param","index","r","input","removePadding","encoded","encodedString","ms","logger","name","ONE_DAY","ONE_HOUR","SEVEN_DAYS","__publicField","IEvents","relayer","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","telemetryEnabled","REQUEST_CONTEXT","val","FIVE_SECONDS","EventEmmiter","opts","AUTH_KEYS_CONTEXT","AUTH_STORAGE_PREFIX","AUTH_PUBLIC_KEY_NAME","THIRTY_SECONDS","client","AUTH_PAIRING_TOPIC_CONTEXT","Store","AUTH_REQUEST_CONTEXT","VERIFY_SERVER_COM","VERIFY_SERVER_ORG","o","AuthKey","AuthPairingTopic","AuthRequest","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","listener","walletUniversalLink","populateAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","AuthStore","getLoggerContext","ONE_SECOND","u32","createView","utf8ToBytes","concatBytes","isTypedArray","toBytes","crypto","fromString","_1n"],"mappings":"yXqBKmB,OAAA,IAAA,QAAiC,wCOuB1B,EAAA,MAEpB,EAAA,EAAA,GACM,IAAA,GAAA,KACgB,CIfN,ASLXqG,ACXkB,ApCkDJ,CoClDK,ADWnBA,CrCwBkB,AqCxBlBA,ACXoB,ApCkDJ,CmCtCvB,ACZ4B,GDY5B,GboBE,EAAsB,CpBRD,AgCnBE,CvB8BD,AuB9BE,CAAC,IZ2BI,CAAC,AY3BA,CZ2BC,AY3BA,GZ4BT,EiBPmB,C5BUpB,A4BCzB,AxBTqD,COK3C,GAAuB,CAAC,CAAC,CAC/B,EAAwB,CXGH,MAAA,OWFI,CqB8BpB,MAAA,SrB7BN,IAAA,EAAY,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,CAEf,CAAC,EAAA,EAAA,CAAQ,uBACI,EAAA,CAAA,EAAA,EAAA,CAAA,CAAc,SAET,GAAA,CAAA,EAAA,CAAA,GAAsB,EAAA,EAAA,oBAG/B,EAAA,EAAA,EAAA,EAAA,KACP,CAAC,CAAG,CAAA,GAAA,EAAA,CAAgB,GAAK,CAAA,EAAO,CiCwHlC,AjD5GmC,CgBZM,CAAC,AAAG,CtBqBF,AuDmG7B,EAAA,AjCvHJ,GAAA,CAAA,GAAA,GAAA,CAAmB,GAAA,OAAA,EAAA,CAAgC,CAAC,AAAG,CAAA,CAAG,CAAC,AAErE,CAFsE,CAEtE,IAAe,CAAC,CAAC,AVYA,UUVa,CkB/BC,AlB+BkB,CkB/BjB,AzB2BgC,CAAmB,OA5B5E,CAAA,CAAqB,Cf2Bb,CQbD,AOdgB,CAAA,CAAA,wBACL,EAAA,MAAU,IAC1B,IAAI,YAAA,EAAA,MAAsB,MAC9B,CPcD,CAAA,AmBnCK,EAAA,EZqBI,EAAG,EAAA,EAAA,MAAA,CAAA,IAAA,IACR,CAAA,EAAA,CAAG,CAAA,EAAA,CAAA,CAAK,CAAA,2CAR+B,OAAQ,GAAA,EAAa,EAAW,CbHV,AaGY,CAAC,sBbFf,SaGP,EAAI,CKdlE,AlBWqE,CaGY,GAOpD,CAAA,CAAA,EAAA,CAAA,EACzB,EAAC,CAAA,CAAA,EAAK,CAAA,CAAI,CAAA,EAAA,CAAA,CAAO,CAAC,EAAG,cAER,CmBrBC,AnBqBA,COyBuC,EAAY,IAAI,AAGnE,CAHoE,CAAC,AAG7D,CAAC,EAAW,CAAS,AZsClB,AR1CJ,CoBIwB,IAAe,CAAC,CAAG,EAAE,CAAC,AAAE,CPR9C,AOQ6C,CPR5C,CAAS,CAAA,EOQ0C,APR7B,CyB3Bf,AzB2BwB,GAAc,CAAC,ATelC,AkC1CE,EzB2BqC,CTejC,AuD3DlC,A9C4CoE,CTejC,AuD3DnC,A9C4CuE,C6C5CjEyB,AtD2D6B,AuD3DnC,CrBiByC,AqBjBzC,A9C4CyE,C8C5CzE,A9C4C0E,AyB3BhC,AzB2BqC,CAAC,AAAL,A6C5CjD,ApBiBmB,AqBjB7C,C9C4C8E,A8C5C9E,ArBiB8C,CqBjB9C,CAAA,A9C4CsF,C8C5CtF,CAAA,A9C4CwF,C8C5CxF,CAAA,A9C4C2F,CAAC,CAAC,AOQzB,CPR0B,AOQzB,CPR0B,AOQxB,CAAC,CAAE,CAAC,CAAC,CPXtE,AOWuE,AAAE,CpBJ7B,A2DhDlD,A9CyCM,AOWwE,CuCpD9E,A9CyCM,C8CzCN,CAAA,A9CyCM,C8CzCN,C9CyCsC,CAAS,G6CzCrB,A7CyCmC,C6CxCvDC,E7CwCuD,E6CxCnC,A7CwCmC,E8CzC7D,CAAA,C9CyC+E,A8CzC/E,CAAA,AvC6CqD,CuC7CrD,CvC6CqD,CAAA,EAOiC,CAAC,ApBJ9B,CAAC,AoBI+B,CAAC,CuCpD1F,AvCoD4F,CuCpD5F,AvCoD6F,CuCpD7F,AvCoD8F,CuCpD9F,AvCoD+F,CuCpD/F,AvCoDgG,CAClF,CAAC,CAAS,CAAE,CuCrD1B,CAAA,AvCqDqC,CuCrDrC,AvCqD8C,CuCrD9C,CAAA,CAAA,AvCqD8C,CuCrD9C,CvCqDwD,AuCrDxD,CrBqBiC,AqBrBjC,CvCqD0D,AuCrD1D,CAAA,AvCqD2D,AAAC,CuCrD5D,ADEO,AtCmDqD,CsCnDrD,ACFP,E9C6C2B,E8C7C3B,A9C6C2B,C8C7C3B,CAAA,ADEa,CCFb,CAAA,A9C6C4D,C8C7C5D,CAAA,C9C6C4D,A8C7C5D,CAAA,C9C6CuE,EAAE,A8C7CzEC,C9C6C0E,AAAK,CAAJ,AyB3BhC,CqBlB3C,A9C6C8E,C8C7C9E,ADE6BD,CCF7B,ADE6BA,A7C2CyD,C8C7CtF,C9C6CwF,AOIhC,CsC/C3BA,C7C2C8D,A6C1C9E,C7C0C+E,CAAC,AOQzB,CPR0B,AOQzB,AY3B1B,CZ2B4B,APRwB,A8C7C/F,CAAA,AvCqDwE,CY3BzB,AZ2B2B,CuCrD1E,AvCqD2E,AY3B1B,CZ2B2B,CAAC,AAAE,CAAD,KAAO,AuCrDrF,CAAA,CAAA,ADGgC,CCHhC,ADGmC,C7CuC0B,CHgBL,AgDvDrB,ACHnC,A9C0C8D,C4C1C/B,ADI0C,AxBgB1C,A2BpB/B,C9C0CkE,A8C1ClE,CAAA,A9C0CmE,AmBtBhC,CnBsBqC,AAAJ,AHgBN,AiD1D9D,CAAA,AjD0D+D,AVdhC,AaFwC,AAAE,C8CtC5D,A3BgB6B,CwBd/B/H,AxBcgC,CwBbhCqG,AADArG,AxBciC,CwBdjCA,GGFE,A9CsCuE,C6CvCpC,A7CuCqC,C2ChC/EA,A3CgCgF,AOWA,CqClDpF,A5CuCqF,AmBtBhC,AwBVjDA,ApC2CiF,CPXC,A4CvC7E,ADOLA,ApC2CmF,CoC1CnFqG,ApC0CoF,CoCzCpFwB,ApCyCsF,CsChD/E,AFOPA,AMZqC,A1CqDkD,CAAC,A0CrDnD,A1CoGrC,CuChGiB,AGHrB,A1CoD6F,CuC5C7F,AvC4C8F,GYjC/B,EZgFpD,MuC3FX,CFLA,AEMS7H,EACAqG,CACP,AGXe,A1CmGN,CuCxFT,ADP+B,CFO7BwB,AGFK,ADLwB,AtC+FtB,CoCvFPN,AER8BO,CDDzB,CAAA,CrCgGE,AuC1FF9H,CDL4C+H,ACK5C/H,GDL6D,CCK7DA,CAAAA,CAAAA,CACA,GGTT,CAAA,C1C2GS,CAAgB,CAChB,CqC1GA,ADUJkH,AaOoB,ANyBA,A3CgEF,CqCzGvB,ADSKA,ApCgGkB,CAAA,AoChGlBA,CpCkGO,CoClG2BA,AGH9Bb,CANTK,AHS2C,AaOU,CVhBrDA,AHS2C,AaOU,CVhBrDA,AvC2G6B,CoCjG3B,AGVF,AvC4GY,CoC3GH,ACDA,AYgBsD,CbftD,AaeuD,AjD4FnC,CiD5FsB,CVhB5C,AvC4GwB,CuC5GxB,AUgB8C,AAAc,AjD4FpC,CoC3GtB,Aae2D,Cbf3D,CaeqE,GbfrE,AaewE,CbfxE1G,AaeyE,CbdzE,Aac0E,Cbd1E,Aac2E,CVhB7E,AUgB8E,CVhB9E,CACP0G,AvCuGS,CoCtGA,ACDT,AKJA,CNKS,ACDT,AEAA,AGJgC,E1C2GvB,CAAA,CuCvGF,AFAP,CAAM,AEAC,CHCE,CAAAL,EAST,CACF,CpC4FmB,CAAR,CgD7FY,ChD8FZ,CiDtFKoD,GAAAA,CZjBhB,AYiBgBA,CZfH,AEHJ,CAAA,AFGI,CEFX/C,CAAA,CAAA,CUiBc+C,CAAAA,EVjBd,CAAO,GGJP,CAAA,QHUE,EvCkGO,CqCtGE,CEIJ,AFJ8B,AYgBZ,CVZlB,AUYmB,GjDuFd,CAAA,CqCrGD,GEEJ,CAAW,CGVlB,CAAyB,EHUHxB,AvCmGV,CAAA,MuCnGUA,CAAQ,GFFG1B,CAAAA,CEEE,EvCoGvB,EuCpG6B,AvCyF/B,CuCzF+B,AUe3B,GAAA,CVf2B,AUe3B,CVfgC,AGT9C,CAAA,C1CkGa,CAAG,CiD1EO,AAAE,AjD0ER,CgD/EE,AhD+ED,AACR,CuC1F0C,CAAA,CAClD,ASSoB,CCKQ,AjD2EpB,CAAA,CiD3EsB,EVdzB,GvCyFS,CAAG,C0CnGnB,AOyBmB,AAAE,AjD0ED,C0CnGD,A1CmGE,EiD1EG,ArE4FN,K2D3GK,CAAA,IAAI2B,ASSkB,ChDiF3B,EAAG,CkDpGA,ClDsGX,C2CnDe,CDlDzB,AQDwB,APmDE,CDlD1B,A1CmG0B,CAEhB,AAFiB,AkDpGD,ClDsGhB,MuC5FkC,CAAA,EvC4FzB,C2ClDE,CJ1CuB,AvC4FtB,CuC5F2B,KAAM,IAAK,CAAA,CGT5D,CAA2B,C1CgHlB,EAAA,CuCvGyD,CAChE,CAAA,AvCyGI,GAAA,CuCzGJ,CAAK,EvCyGD,CAAA,MuCzGY,EvCyGM,CiDhFK,CAAC,ANqBA,A3C2DF,AuCzGNC,CI8CS,CAAG,CAAC,CDvDnC,ACuDmC,CAAA,MJ9CbA,CAAY,CvCyGO,EAAI,CuCzGN,CAAA,CvCyGS,CAC5C,EuC1GmC,CAAM,GvC0GzC,AAAU,EuC1GoC,IvC0G9B,EuC1GoC,AvDuIhC,AiE7GI,CAAC,CVzB7B,AGViC,CHYjC,AGZiC,MHYpB,MAAO,CAClB,MAAM,IAAK,CAAA,QAAA,CAAS,AGbW,CACjC,KHaE,CAAA,MAAM,IAAK,AGbK,CHaL,AGbK,aHaL,CAAc,AvCsGG,ChB6BC,G0DhJb,CAClB,CHaE,CAAA,MAAM,KAAK,GvCsGI,EAAA,C0CnHI,CAAA,CHaC,AvCsGL,AAAG,CuCtGE,CvCsGF,GuCtGE,CvCsGG,CAAC,CuCrG1B,CACF,GvCoGiC,CAAC,CAAC,M0CnHZ,CACrB,qBAAuB,CAAA,G1CqHA,EAAC,IAAI,CAAC,OAAA,EAtEzB,I0C/CmB,CACvB,I1C8CI,CAAgC,CAAA,EAAmB,EAAA,MACjD,CtBrBuB,AwCZpB,AlBiCF,CAAG,I0C/Ca,A1C+CT,GY5BK,A+B9BA,EzByBE,ENKE,A+B9BA,CvD8FgB,ARxCvB,IAAA,IoBIc,AAE9B,CAF+B,CAAC,AZoCiB,CYpChB,AZoC0C,CYlCtE,G0ChDL,CAAA,A1CgDS,EAAA,GAAA,EAAA,EAAA,GAAiC,IAAS,KAE5C,IAAA,EAAQ,C0ClDf,CAA8B,A1CkDf,EAAA,GAAA,IAAA,CAAiB,CAAA,EAAA,CAAM,CAAA,CAAA,EAAI,CAAG,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,C0CjD/C,CAAA,A1CiDiE,C0C/CpD,E1C+CuD,CAAA,CAAI,CAAC,CAAC,CAAG,CPOzD,COP2D,CAAC,CAAG,CAAC,CAAC,CPOzD,AOP0D,CAAA,GAAM,CAAC,S0C/ClD,CACzC,E1C+CkB,CPO6B,AmBlCxB,AZ2BJ,CXeG,AWfA,CPOqC,COPnC,CAAE,CAAC,APO4C,CmBlCvC,AvB0CF,CuB1CG,AnBkCgD,AOPlD,EAAG,CAAC,APQhC,EJOoC,CAAC,CAAA,AqD9DxC,CAAmB,U1CiDT,E2CzDQ,A3CyDD,C2CzDE,AzByBA,AlBgCD,CAAJ,A2CzDW,A3CyDN,CY3BE,A+B9BK,AzByBA,AtC8BF,C+DvDG,A3CyDL,CAAC,CAAC,AAAG,C0ChD3B,CAAA,A1CgD6B,GACd,CAAC,CAAA,EAAA,GACD,CAAA,CAAE,EAAO,C2CzDE,A3CyDD,CAAJ,AAAK,C2CzDE,A3CyDD,AACjB,EAAK,EAAM,C0CnDrB,ACN4B,CDMJ,AxBmBK,AlBgCN,AAAE,EAAE,AAAE,CAAC,EAAI,CAAC,CAAA,EAAM,CAAC,AACtC,EAAA,EAAiB,EAAE,AkBhCO,CAAA,ClBgCD,CAAC,CAAC,AkBhCM,ClBgCH,AkBhCI,ClBgCJ,CAAA,E0CnDlC,A1CmDkC,EAAW,WAC5B,CAAC,CAAE,EAAI,GAAA,C0CpDD,CAAA,C1CoDU,GAAI,AAC/B,CAAC,AAD+B,CAC/B,EAAA,EAAA,EAAA,EACD,CAAC,CAAA,EAAA,EAAA,EAAA,C0CtDgB,CACvB,A1CqDsB,UAIP,EAAA,KACA,EAAE,U0C1Dc,CAAA,A1C2DhB,CVmBC,AUnBA,CAAA,EAAA,GAAA,IAAA,QACW,CAAA,EAAA,GACZ,EAAA,EAAA,EAAkB,A0C7DF,CAC/B,E1C6DU,EAAK,E4CtEQ,ADaA,A3CyDF,C4CtEO,ADaA,AAAJ,CAAK,A3CyDF,CAAP,A4CtEU,C5CsEL,A2CzDU,A3CyDF,C2CzDG,CAAC,A3CyDN,CACrB,EAD4B,AAC5B,CAD6B,AACjB,CADkB,AACjB,C4CtEO,A5CsEN,CAAC,CAAC,EACf,CAAC,CAAA,EAAA,GACD,CAAA,C0ChEsB,A1CgEtB,C0ChEsB,C1CgEtB,EAAA,cAEE,C4CtEO,AxDmHS,AwDnHT,U5CyET,C2CzDK,A3CyDJ,C2CzDK,AvDsGQ,CAAA,CY7CP,C0CrEe,A1D4FV,AgBvBJ,C0CpEnB,A1CoEsB,GAAA,GAAS,EAAE,CAAE,CAAC,AAChC,EZ8CM,AuDvGE,EAAA,CDZK,CAAA,E1CqEJ,EAAI,EAAA,EAAA,GAAA,IAAA,CAAA,C0CrEA,A1CqEkB,C0CpEnC,C1CoEmC,CAAA,CAAA,CAAO,CAAC,CAAG,C4CxDpB,AxDuGA,AwDvGE,A5CwDmB,CAAA,S0CpE7B,A1CqEL,CAAC,A2CxDM,ACAA,C5CwDH,A4CxDI,C5CwDH,ChBwBK,AJjBJ,EoBPK,GAAA,IAAA,CAAA,CAAA,EAAA,C0CpExB,CAAA,A1CoEwB,EAAqB,CAAC,CAAA,CAAE,CAAC,EAAA,CAAA,EAAA,GAAY,CAAG,CAAC,CAAC,CAAC,CAAC,C2CvDlB,C3CuDqB,CAAC,CAAC,AAAG,EAAE,CAAC,C0CpE/E,A1CoEgF,C0CpEnD,A1CuE1B,CAAC,EAAE,CgDzFK,CAAA,CAAA,ChDyFW,EAAM,CAAC,AgDzFA,CAAC,ApEkGa,AoBRxC,CADwB,AACxB,EAAA,EAAA,CAAkB,CAAA,EAAO,CAE5B,CAAC,CAAA,IAAA,CAAA,C0CzEH,CAAA,A1C0EA,CAAC,A0CxEY,C1CsGD,IAAA,CAAA,OAAY,C2C1DK,A3C0DH,EhB+BI,EgB/BA,CAAC,EkD7GM,ElE4IA,EAAA,E0DrIM,CAAA,CACzC,uBAAyB,A1CsGD,C0CtGC,A1DsIP,GAAA,CgBhCW,OAAO,CAAC,YACxB,C0CvGY,AQLN,CRMnB,AQNmB,MlD6GZ,C2CzDK,CAAC,CAAA,CAAA,E3C2Db,C2CzDG,CrDwGC,KU/CG,CAAW,CAAA,A0CzGI,e1C0GZ,IAAA,G0CzGV,CAAA,mB1C0GoB,CAAA,CAAA,CAAU,IAAA,GAEhB,IAAI,AkD5GI,ElD2Gb,ChBoCG,AMgB6B,CoD/JzC,ACkDmB,AAAJ,A3D6FH,AMgB6B,CoD/JF,AQDvB,APmDA,COnDC,EPmDE,GAAA,A3CyDH,EAAC,EkD5GM,AlD4GF,AiDNE,CAAC,ACtGA,AlD4GF,CAAC,AACJ,CiDPS,CCrGH,EPkDM,EAAE,A3C0DR,CAAC,EkD7GU,EAAE,AlD8G/B,CiDRgC,EAAE,CAAC,AjDQ/B,CVoDC,CUpDK,CAAC,AkD9G2B,AlD8G/B,CkD9GgC,AlD8G1B,EiDR4B,ACtGA,AlD8GtB,CiDRuB,EjDQpB,CiDRuB,CAAC,CAAC,APpGtD,COoGuD,APpGvD,C1C6GU,EVmDY,AUnDL,CpBaN,AsEzHQ,ClD4GL,AkD5GM,GlD4GH,GAAQ,CAAC,EAAW,CVmDE,GUnDE,CAAC,C0C7G1C,CAAsB,C1C6GoB,CAAK,EAAM,GAAG,AACpD,CADqD,CAAC,C2CxD7C,C3CyDJ,GpBaC,CoBbG,EAAI,CAAC,CAAE,CAAC,A2CzDM,A/DsER,CoBbK,C0C7GxB,CAAA,A1C6G8B,C2CzDG,A3CyDF,A2CzDM,C3CyDT,CAAK,CAAA,CAAO,CAAC,C2CzDE,AAAI,GAAA,C3CyDD,C2CzDM,CAAC,CAAC,GAAA,EAAA,C3CyDM,CAAC,I0C7G7D,A1C6G6D,C0C7GlC,A1C8GnB,C2CxDO,CAAC,COnDC,ClD2GL,CAAA,GAAA,GAAS,GAAU,E2CvDf,AMmDK,CAAC,CCvGY,AlD2GC,CkD3GA,AlD2GN,AAAO,EkD3GQ,ADuGlB,CCvGmB,CAAC,ADuGlB,C3DuDJ,AqD1GA,CAAA,EDtDxB,CAAA,O1C+GS,IAAI,CAAC,AkD1GI,GAAG,IAAI,CDsGD,CAAC,AjDOvB,G2CvDO,A3CuDH,CkD7GyB,ADsGF,CAAC,ACtGE,CDsGD,CjDOrB,CAAC,C2CvDK,CD3DhB,CpDuKc,AoDvKmB,CC2Dd,IAAA,COtDyB,AlD6GvB,CkD7GwB,APuDlC,qB3CuDO,C2CtDK,ArD4GN,CAAC,CAAC,A4D/JM,GRTzB,e1CmHiB,CAAM,CkDzGK,IAAA,ClDyGA,I0CnHA,CAAA,K1CmHE,CVsDD,AUtDS,CAAE,CAAG,IAAI,SkDtGxC,ClDyGA,A2CtDS,CMmDJ,ANnDA,GMmDG,A3DyDN,CqD5GO,AMmDA,ANnDA,C3CsDI,A0CtHQ,C1CsHP,A0CrHrB,CpD2KoB,AUtDM,CAAC,CiDHC,CjDGG,IAAQ,EAAW,CAAC,EAAE,EiDFzC,CjDEmC,AkDxGlC,ADsGA,CjDE4C,CAAC,CiDF1C,GCtGG,CAAC,ClDwG4C,CiDF1C,CAAC,AjDE2C,CiDF1C,AjDE2C,CiDF1C,AjDGlB,CiDHmB,AjDGlB,E0CtHyB,A1CsHd,C0CtHc,A1CsHb,CAAC,EAAA,QACf,CAAA,MAAA,e0CvH2B,CACjC,Y1CyHS,E0CzHM,A1CyHN,IAAK,EAAE,CiDFK,CCtGC,EDsGE,CAAC,AjDEJ,CAAC,AkDxGI,ClDwGH,AiDFI,CAAC,CPtH5B,CAAA,COsH+B,GjDGvB,EAAC,CiDH4B,CAAC,ACtGA,ClD0GpC,CkD1GsC,AAEjC,EDsGE,ANnDA,CAAA,CMiDmC,ANjDnC,EMiDqC,CAAC,EAAE,CjDIpC,CiDJsC,CjDIpC,A2CrDI,CMmDC,AjDEJ,AACd,CiDHmB,CPxHrB,AOwHsB,CACb,ANnDA,ADtEkB,C1C2HnB,CkDxGK,ADsGA,CjDEO,C2CrDK,G3CqDD,CAAC,C2CrDK,GAAG,A/DyEN,CoBpBG,CAAC,AACvB,CAAA,SAAA,CAAU,CAAE,C0C3HpB,A9D+IiB,AoBpBM,C0C3HvB,G1C2H2B,CAAC,AAC1B,GiDFO,CAAA,IjDEE,EAAM,CAAH,AAAI,CkDxGC,AlDwGD,EAAQ,EAAI,CkDxGK,AlDwGN,IkDxGU,ClDwGH,CAAE,EAAM,C0C5H5C,A1C4HyC,AkDxGI,CAAC,ARpBd,C1C4He,CACvC,E2CrDQ,E3CqDJ,CAAC,MAAA,EAAU,GAAU,C2CrDA,COnDC,APmDO,AACzB,CAAC,COpDmB,APoDnB,C3CoDc,A2CrDM,AOnDA,APmDO,GAAG,CAAC,CAAC,C3CqDL,EAAE,C0C5HhD,A1C4HiD,AAC3C,C0C3HO,CCuEC,ADvED,E1C2HD,C2CpDO,COnDE,ElDuGL,AkDvGI,CPmDG,AOnDF,ElDuGG,GAAG,CAAC,CkDvGK,CAAC,AlDuGK,EkDvGH,ElDuGO,CAAC,CAAR,KAAc,C0C3HrC,A1C2HuC,C0C3HT,C1C2He,A0C1HxD,C1C0HqD,EAAM,AACvD,CADwD,A2CnDjD,C3CmDkD,A2CnDjD,AOnDA,AlDuGJ,CAAD,A2CpDQ,E3CoDJ,CAAC,C2CpDO,CAAC,A3CoDE,CkDvGD,EPmDE,COnDS,CPmDP,AOnDQ,CPmDP,AOnDA,CPmDC,A3CoDN,CAAS,CAAC,E0C3H/B,CAAwB,C1C2HW,CAAC,KkDvGW,CAAA,ClDuGH,IAAI,CAAC,MAAM,CAAG,AkDvGI,GRnB9D,A1C0HiE,C0C1HjE,CQmByE,YlDwG1D,EAAA,E0C3Hf,A1C4HI,C0C5He,AtD0MV,A8DrLE,ElDuGA,CiDDO,CCtGC,CAAC,ClDuGL,CkDvGO,AlDuGN,ApB+BE,CsEtIK,C9DqLD,EY5Eb,CACT,C2CrDe,A3CqDd,CADW,A2CpDI,AvDkIJ,KsD3MZ,CAAA,C1C+HQ,CAAe,C2CpDX,AAAE,C3CsDZ,CkDvGK,CD4GC,CAAA,CjDLD,GiDKO,AC5GA,ClDuGH,CAAC,CpBiCD,E8DlKX,CAAkB,K1CiIG,CAAA,IkDvGU,ElDuGF,AAAI,C2CnDhB,AMyDA,CNzDC,CAAC,AMyDI,ANzDA,C/DqFL,AqE5BM,CC5GC,AlDsGa,CAAA,C0ChItC,+BAAiC,CAAA,Q1CiI/B,CiDMK,ArE4BJ,CqE5BK,ArE4BJ,CAAA,IoBlCK,GiDMO,CjDNH,CAAC,CiDMK,GAAG,CAAC,IjDNA,CAAC,EACxB,C0ClIiC,AOuIF,AjDNJ,AAC1B,C0CjID,AOsIgC,AjDNJ,AhB+DxB,CgB/DyB,EAEzB,CAAa,CkDtGL,0BR5BqB,CAAA,E1CoInB,EkDtGM,CAAC,ClEuKH,CMGG,EUpEA,CAAA,IAAA,WAAA,Q0CpIY,CACjC,O1CqI0B,CAAA,OACxB,E2CnDM,OAAA,E3CmDE,EAAK,E0CtIiB,AO4Jb,CP5Ja,AQgCV,AD4HF,CjDtBD,CAAC,CAAC,CpBmCD,GoBlCV,CAAC,GkDtGO,CtEyIL,IoBnCM,CkDtGM,IAAI,CAAC,CAAC,AlDsGA,CpBmCL,IoBnCU,CAAC,EkDrGT,CRlCI,AQkCH,CRjC7B,A9D0KwB,2BoBjCtB,GmDpKO,SnDkKF,EmDpKM,CAAC,AF2LF,EP9JkC,CAAA,CS7B5B,AF2LF,CrEaH,CoBpCG,CAAA,GACd,IAAA,CAAK,CkDrGK,CD4HC2B,EC5HE,CAAC,CC/DC,CnDoKH,CpBoCD,CoBpCG,CACP,CACT,CACA,AADC,CADW,AmDnKR,ADgED,ClDmGU,ApBoCF,AuEvMN,CD+DC,ED4HE,CjDtBF,CmDpKG,CAAA,CnDqKP,OAAO,EmDpKM,CAAC,AvEwMN,CoBpCG,CAAA,C0C5IiC,CAC9C,Q1C2IwB,CAAC,CpBoCD,AsEzIM,GlDqGD,CkDrGK,EAAE,GRtChB,K1C2IoB,IAAI,CAAA,SAAU,C0C1IxD,A1C0IyD,C0C1IzD,A1C0I0D,C0CxI7C,A1CwI8C,AAEzD,CpBkCwD,CAAC,EAAE,KoBlC3D,MACO,ImDpKQ,CAAC,IAAA,CAAA,CAAA,EnDqKd,IAAA,A0C5I4C,C1C4IvC,A0C5IuC,CAC9C,I1C2IY,CAAC,EkDrGM,AtE4IJ,EoBvCE,CAAC,CAAC,CAAC,AACpB,CADqB,AkDpGlB,AlDqGF,AACD,CmDpKIC,CACA,ED8DE,OlDqGK,CpBuCD,AoBvCY,CAAA,CACpB,GAAM,CAAA,M0C9I+B,CAAA,E1C8I/B,CAAU,QAAE,CkDrGK,AlDqGC,CAAA,UAAA,CAAW,QAAE,CAAM,M0C9IN,CACvC,I1C6I+C,CAAS,AkDrGJ,ClDqGM,CAAG,IAAI,CAAC,AAYhE,CqD1LK,SrD+KL,CpBwCO,EoBxCA,IAAI,EAAO,CkDrGU,AtE6IL,CoBxCK,A0C9IK,CAAA,CQyCP,AlDqGT,AAAmB,EAAW,EAAW,AAAxB,EAA8B,CAAC,EAApB,AAAqB,CAC/D,CADqD,MACrD,CAAQ,GAAG,CAAC,EpB0CE,AsE/II,CE7FC,CAAA,CAAA,OVmDW,AUnDX,CVoDxB,C1C+IE,CoDlMK,CpDkMF,AAAD,GAAI,CkDrGK,AlDqGF,CoDlMG,GpDkMC,CAAA,GAAI,CAAC,ApB0CF,AoBzChB,CoDlMK,CpDkMH,AAAC,GkDrGO,CE7FC,AF6FA,CR3CW,C1CgJb,CoDlMK,IpDkME,CAAA,MAAO,CACvB,CoDlMK,CpDkMH,AAAC,GkDrGO,CAAC,IR3Cb,A1CgJa,C0ChJb,A1CgJgB,CkDrGK,GlDqGD,CAAA,QAAA,CAClB,EAAE,AAAC,EqD1LM,EXyCX,CAAsB,AWzCR,CrD0LH,CqD1LK,AAAC,CAAA,CrD4Lf,EAAE,AAAC,EoDlMM,IpDkMA,CAAG,CqD1LG,AAAE,CAAC,ErD2Lf,EoDlMM,CAAC,CF6FC,CR9Cb,CU/Ce,AV+Cf,GU/Ce,CpDkME,CpB2CL,0BoBzCE,CAAG,E0CrJjB,CAAoC,C1CqJf,CAAC,EqD1LI,AHqFE,EAAE,IGrFE,CrD0LD,CpB2CP,AyErOU,AHqFE,AlDqGJ,AACvB,CkDtG4B,AGrFF,ArD4LnC,CADW,AACV,CADW,AqDzLR,EHqFE,EADc,CAAC,AGpFZ,IHqFI,MAAM,CAAC,MRjDpB,eAAiB,CAAA,iBAAA,CACjB,2BAA6B,CAAA,6BAAA,CAC7B,wCAAyC,yCACzC,CAAA,6CAAA,CAA+C,+CAC/C,CAAA,wCAAA,CAA0C,0CAC1C,CAAA,6CAAA,CAA+C,+CACjD,CAAA,CAEa,iCAAmC,CAC9C,sBAAA,CAAwB,wBACxB,CAAA,iBAAA,CAAmB,mBACnB,CAAA,oCAAA,ClDnEa,AkDmEyB,AtEhExC,SAAS,AAAM,CAAQ,EACrB,GAAI,EAAS,MAAM,EAAI,IAAO,CAAF,EoBJT,GpBIiB,AAAI,GsEgExC,CAAA,MtEhEkD,qBAClD,IAAM,EAAW,GsE+DjB,CAAsC,AtE/DjB,WAAW,KAChC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,AsE+DrC,ItE/D0C,AACxC,CAAQ,CAAC,EAAE,CAAG,IAEhB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,CsE4DG,CAAA,ItE5DG,CAAE,IAAK,CACxC,IAAM,EAAI,EAAS,MAAM,CAAC,GACpB,EAAK,EsE0DmB,AtE1DjB,CsE2Df,StE3DyB,CAAC,GACxB,GAAqB,KAAK,CAAtB,CAAQ,CAAC,EAAG,CAAY,CsE0DA,CAAA,ItE1DM,AAAI,UAAU,EAAI,csE0DxB,CAC9B,EtE1DE,CAAQ,CAAC,EAAG,CAAG,CACjB,CACA,IsEwDe,AtExDT,CsEwDS,CtExDF,EAAS,MAAM,CACtB,EAAS,EAAS,CsEuDT,CACf,ItExD8B,CAAC,GACzB,EAAS,KAAK,GAAG,CAAC,GAAQ,KAAK,GAAG,CAAC,IAuG3C,CAvGgD,CoBlBjC,QkDyEkC,CAAA,yBtEvDkC,sBsEuDlC,CAC/C,8CAA+C,+CAC/C,CAAA,+CAAA,CACE,iDACJ,CAAA,CAEa,uBAAyB,EAEzB,CAAA,sBAAA,CAAyB,cAEzB,CAAA,+BAAA,CAAkC,MAElC,qBAAwB,CAAA,2juDxD9DpC,GAAA,EAAA,CAAA,CAAA,QDZA,GAAA,EAAA,CAAA,CAAA,uBLDD,GAAA,EAAA,CAAA,CAAA,QFYC,GAAA,EAAA,CAAA,CAAA,sBeNA,GAAA,EAAA,CAAA,CAAA,uBbGM,IAAA,GAAA,aAEI,GAAA,iBAAiB,CAAA,KAAM,CAAC,IAAA,CAGjC,MAAA,sBACE,IAAM,EAAA,GAAA,iBAAwB,CAAC,CaG6B,IbHxB,CAAA,IAAK,CF2BH,AE3BG,AACnC,EAAA,GAAA,eAA6B,CAAC,CMyBC,AGdA,mBTXmB,EAAE,CAAA,AAE1D,GAAI,CAAC,CAAC,GAAA,CAAA,CAAmB,EuC1BhB,CAAoB,AvC0BD,CyCqCrB1D,AzCrCsB,AoBOI,OpBJ3B,CAAA,CuC5BG,CAAA,AvC4BS,CaEqC,AOKlC,CAAA,EpBPc,CAAG,EAAY,C2C9BhB,CAAA,G3C8BqB,CAAC,G2C9BtB,A3C8ByB,C2C5BlD,A3C4BuF,CAAA,G0CrB5EQ,A1CuBf,C0CvBiCC,A1CuBlC,AF0BA,EAAA,EyCxDK,CAA6B,YvC8BlB,CAAC,E2C9BgB,AJC5B,CAAA,AID4B,KDO2B,CAAA,CAHzD,IAAA9G,CAAAA,IAAAA,CAAAA,CAAAA,CACA,CHJE,AvC6BmC,CuC7BZ,AvC6Ba,CwBPF,AXQuC,C6B1B3EqG,A7B0B4E,CAAC,A6B1B7EA,AEKAA,A5CwBP,C4CxBOA,ApBeN,EAAA,CxBYC,E0ChCKA,A1CyB+C,C0CzB/CA,ACL8B,ACU9BA,A5CoBgD,AAOrD,CuClCO,AIDA,ACQFA,CFFT,A1CsB2D,C0CrB7D,AEEK,A5CmByD,C4Cd9D,G5CmB6B,CMsBC,A4C5D9B,ApD+D8B,CEzBI,O2CjCH,CAAA,GJCI,AvCgCD,CAAY,AuChCX,CWNnC,AXMmC,CWNnC,CXMsC,AvCgCW,CgCtBO,AkBhBxD,ClBgByD,AkBhBzD,AlDsC0D,A2CjC3B,C3CiC2B,A2C/B7C,COPb,ClDsC8D,CkDtC9D,CpD+DwD,AoD/DxD,ClDsCuE,CAAE,EkDtCzE,CAAA,AlDsCiF,CkDtCjF,AXMmD,AvCgC8B,AAE9D,CkDxCnB,AXMuD,A1BiCL,CqCvClD,AXMuD,EAAA,AICzB,CAAA,C3CiCL,A2ChCvB,CJFiE,AWNnE,AlDyCQ,CkDzCR,AlDwC2B,CkDxC3B,AlDwC4B,CkDxC5B,CAAA,AXMuE,EIE5D,A3CoCL,C2CpCK,AvBsCO,CY1BJ,CkBpBd,CAAA,CAAA,CAAA,CAAA,AlD4CY,CkD5CZ,CAAA,CXMmF,AWNnF,AlD4CY,CuCtCuE,AWNnF,CXMmF,AWNnF,CXMmF,AWNnF,CXOa,AWPb,CAAA,GPQW,CACT,AOTF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,AlD4C2B,CkD5C3B,AlD4C4B,CaFuC,AqC1CnE,AZemC,GKNpB,AOTf,AlD4CgC,C2CnCjB,AOTf,AlD4CgC,CkD5ChC,AlD6CQ,CkD7CR,ArC2CyB,A2CtCQuB,CNLjC,AXOoC,CAAA,CAAA,CiBFHA,CjBEM,GWPvC,CAAA,EAAA,QPSe,AOTf,CAAA,APUE,COVF,CAAA,ClD+CI,CuCxCsD,AWP1D,AlD+CK,AAAC,CuCxCoD,AWP1D,CAAA,CPUW,AOVX,ApDoCiB,C6C1BN,AOVX,ArC8CY,CqC9CZ,AlBwBW,CkBsDW,AlBtDV,EhCuBiB,CAAC,AuCxC4B,A1BuCX,ALyCxB,G0CTD,KlD7BR,I2CvCH,CACT,A3CsCiB,CAAC,CoBI+B,K8ByB7B,GPnER,CAAA,KOmEkCR,GAAa,CAC3D,WPpEY,AOoEE,CPnEd,A3CqCkD,CkD8BpC,CACZ,C9B3BiF,ApBF/E,E2CvCG,CAAA,A3CuCH,CkD6BI,GACR,CA4BF,CAEsB,MAAA,GPnGb,CACP,A3CsCoB,CAAA,MkD4DY,CAkBhC,ElD9EoB,CAAW,CACzB,C8DrD4B,A9B6BnB,AnB+BF,CiD1DF,A9B0B2B,CZ2B2B,AkB/BhD,CtC6BP,CAAA,C2CvCU,CAAA,AOoHpB,CAAmBC,CAAgC,CAAA,CAAhC,IAAAA,CAAAA,GlD5EN,CkD4EMA,CAAAA,CAAAA,CAjBnBX,CAAA,CAAA,IAAA,CAAgB,KPnGI,CACpB,C3CwCM,GkD0DqB,CAAA,IAAA,CAAA,CAC3BA,CAAA,AlD3DkB,CkD2DlB,A9BvDyB,GuB5CP,A3CwCI,C2CxCJ,AOmGlB,AlD3DuB,CkD2DP,SAAU,CAAA,CAAA,EAgB0B,CAmBtD,OlD9F+C,EAAE,E2CxC7B,CAClB,A3C2CI,MAAM,C2C3CD,CAAA,C3C2CC,gB2C1CZ,CAEa,CAAA,E3CwCmB,CAAC,UAAU,IAAI,GaOxB,K8B/CV,CAA4B,I3CwCmB,CaO1B,KAAA,M8B7CrB,E3CsC6D,KAAK,CAAC,CAAA,c2CtCzC,CAAA,CACrC,I3CsCqB,G2CtCZ,CAAA,C3CsCiB,CAAA,O2CtCjB,CACT,OAAS,CAAA,SAAA,CACT,G3CqCmB,CAAA,M2CrCP,CAAA,E3CqCiB,CAAA,S2CrCjB,CACZ,KAAO,CAAA,OACT,CAEa,CAAA,yBAAA,CAA4B,EAE5B,CAAA,M3CgCT,CAAC,AACH,CgC1BQ,AhC0BP,CACD,MAAM,Q2ClCK,CAA0B,CACrC,QAAA,CAAU,E3CkCR,CaaF,CkDpEQ,E/DuDA,CsC9BK,AyBzBA,ClDoEN,AbbQ,CsC9BK,CKHtB,CAIa,ALDS,CKCT,gB3C6BqB,CAAA,E2C7BrB,CAAsB,E3C6BK,CAAC,CaevC,Gbf2C,C2C1BhC,A3C0BgC,AACnC,C2C3BG,C9ByCL,AkDrEQ,AAAC,CAAA,ClDqEP,CkDrEO,KlDqED,EAAE,MAAM,CbdU,CacR,AbdS,K2C3BtB,C9ByCmB,A8BzCQ,E9B0CtC,C8BxCW,CAAA,K9BwCJ,AbfyC,CAAC,CaexC,EbfwC,KaejC,C8BxCL,C9ByCX,A8BzC6B,CAC7B,K9BwCM,EAAE,AbhBwD,CAAC,C2CxBjE,CAAW,G9BwCG,EAAE,M8BvChB,A9BuCsB,C8BvCtB,C9BuCwB,I8BvCxB,CAAO,A3CuB8E,CagBvD,CbhByD,CaiBvF,AbjBwF,CAAA,AAChF,CsC9BK,CzB8CV,AkDvEW,A/DuDI,C2CvBpB,AoBhCyB,ClDuElB,A8BvCP,AoBhC0B,CpBkCb,AoBlCc,A3CyDL,CAAA,GPcV,EAAE,KAAK,EAAE,EbhBc,CAAC,C2CrBH,C9BqCP,A8BrCO,CAC/B,C9BoC0B,KAAK,C8BpCtB,CAAA,A9BoCwB,KAAK,EAAE,E8BpC/B,A3CoB6C,C2CnBtD,C3CmBwD,CagBX,AbhBW,AAChD,EAAA,CagBT,CAAC,CbhBQ,E2CpBE,UACZ,Q3CmBuC,CAAC,IoBEE,CkBhCO,CAAC,ItC8BA,EAAE,CAEhD,AAFgD,CaoB7C,EblBC,CAAC,EACH,IADS,CAAC,A+DxDI,C/DyDR,AoBCD,CAAA,KpBDW,EoBCA,CAAC,oBpBEnB,GAAI,CAAC,QACG,AAAI,MAAM,8BAGlB,CgEvEK,EhEuED,CAAA,EACF,E+D1DQ,I/D0DF,AAAI,MAAM,2CAGd,CAAC,CgExEK,ChEyER,MADW,AACL,AAAI,MAAM,wCAGlB,GAAI,KACI,EAAc,MAAM,CgEzEO,ADaA,C/D4DF,aAAa,CAAC,CAC3C,QAAS,EAAQ,CgEzES,EAAE,CAAC,EAAE,EAAE,KAAA,ChE0EjC,eAAgB,IAGlB,EAAgB,CQ0CK,CR1CO,AQ0CP,AV5DD,CqEtEe,ArEsEf,CqEtEgB,IAAN,CAAW,AAAV,CnEwFK,CmExFO,AnEwFhB,CAAW,AAGlC,CAHkC,AAClB,GAAA,mBAAmB,CAAC,cAAc,CAAC,EAAQ,KAAD,SAAe,CAAC,CAAA,EAE1D,CoBLG,EAAA,apBKgB,CAAC,YAAY,CAAC,IAAI,EAAE,AACzD,CAD0D,EAC1D,gBAAA,CAAA,oBAAqC,CAAC,CAAA,OAGlC,CgE/DO,CAAC,AxDuGF,ARxCM,MAAM,CoBPC,AhBwBI,CJjBE,CoBPJ,C4CxDO,EAAO,EAAE,G5DgFC,A4DhFE,EhE+DJ,CAAC,CgE/DO,ChEiElD,CFjBO,IEe2C,CAAC,CFf5C,AEe4C,EAExC,UAAU,CAAC,CACpB,CgEhES,AlEkDF,CsEpFG,GpEkGJ,CgEhES,ChEiEf,CQsCe,AwDtGN,ClEiDU,AsEnFT,wCpEsGG,CAAA,KAAM,C+DjEO,CAAC,A/DiEN,CAEvB,AAFuB,CoBTlB,CAAC,AgDzFE,CAAA,gBpEoGQ,CAAC,EFhBI,EsEpFM,CAAC,IpEoGF,CAAC,CACzB,E+DlEU,CjEmDH,EEeD,CoEnGS,AtEoFJ,OEgBX,EoEnGU,IAAA,oBpEoGV,CoElGS,CLgCC,C3CwDE,CgDxFA,CLgCC,IAAI,CrDoFC,AVlBR,CAAE,C+DlES,EAAE,C/DkEP,CAAC,sBAAsB,E+DlEU,A/DkER,GAE3C,E+DpEwD,GAAG,C/DoEpD,CoBGD,A2CpEI,C/DiEI,CACd,C+DrEgE,CAAC,CAAC,C/DqE5D,C+DrE8D,C/DqEjD,AoEjGL,ChD6FD,C2CjE0D,A3CiElD,EpBIE,A+DrEkD,C/DqEjD,C+DrEmD,CAAC,EAAE,EAAE,GK5BzC,CAAC,YpEiGM,EAAE,AAE5C,CAAC,AAF2C,CoE/FpC,EAAA,epEiGQ,CAAC,KAAK,CAAC,EoEjGQ,CAAC,CpEiGL,EAAoC,oBAAoB,EAAE,CAAtD,AAAuD,GAAvD,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAC5D,E+DlEU,CK/BC,A1DoHF,GVnBH,GAAA,eAAe,CAAC,IAAA,CAAK,CACzB,AoElGkC,KpEkGlC,CqE5FwC,EAAE,GAAG,CAAC,arEgG9C,EAAW,IqE5FU,CAAC,SrE4FG,CAC3B,CAD6B,CAAC,A+DlEpB,CAAA,CM1B4B,KAAK,CAAC,CAAC,OrE6F9B,CAAC,QsEtHc,CtEsHL,CAAA,qDAEzB,EQiDQ,CAAA,AYxDO,MAAF,CAAC,AkD9GI,CAAC,AlD8GJ,OpBOA,CAAC,OsErHe,EtEqHN,CAAC,SsErHiB,EAAE,StEqHC,CAAC,CAAA,EsErHW,EAAE,KAAK,GAAG,IAAI,GtEwH1D,AsExH6D,CtEwH7D,CsExH+D,EAAE,MtEwHvD,CAAC,CACzB,EsEzHyF,GtEyHnF,AsEzHsF,CDiC7E,A7DwIJ,CAAA,MR/CX,CsE1HqG,EAAE,GtE0HhG,kBACP,CIqBK,AI2BE,cR5CT,QAAQ,C+DpEO,EMjBS,ErEqFX,CAAC,8BAA+B,GAEjD,CAAC,AsEvHE,APmDA,C/DkEmD,CAAC,CAAA,IAGjD,GsEvHK,oBtEwHL,KACI,EAAO,IAAI,CAAC,EsEvHQ,KtEuHD,CsEvHO,CAAC,AtEuHN,CAAA,AsEvHO,AtEwHf,GAAM,AIoBQ,CJpBV,EsEvHW,CAAC,GlE4ID,SJlBhC,MAAM,GIoBW,MAAA,cJpBS,CAAC,UAAU,EAAE,CAAA,AAEvC,C+DpES,EAAA,e/DoEM,CAAC,KAAK,EAAE,CAGzB,GAAA,gBAAgB,CAAC,KAAK,CAAC,IsExHU,CAAC,ItEwHF,CAAC,AsExHM,CAAC,AtEwHP,mBAEjB,CAAC,SAAS,CAAC,CACzB,MAAO,oBACP,KAAM,C+DtES,O/DuEf,G+DtEW,COnDC,A5D8JH,OVrCG,IAAI,CAAA,sBAAuB,EAAE,EAE7C,CAAE,CoBdD,C2CvDK,IAAA,E/DqEU,CAAC,A+DrEE,A/DuEjB,CqEpBkB,AAEb,CNrDc,ArD0GJ,A4D3JP,CAAC,KtEwHD,KAAK,CAAC,CsExHO,A9DyKA,4BRjDuB,GUsCO,AVpCvD,CUoCwD,AVpCvD,AsExHE,C5D4JsD,AVtCJ,A+DnEjD,A/DsEJ,MAAM,oBACS,EsExHM,CAAA,iBtEwHW,CAAC,KAAK,CAAC,GUuCC,CVvCG,CACnC,CUuCD,CVvCW,G+DrEO,ArD4GL,CAAA,aVvCY,CAAA,eAAgB,CAAC,GAAA,eAAe,CAAC,oBAAoB,EAAE,CAAC,CAChF,AADgF,EACtE,EUuCR,C4D/JO,AtEwHC,CsExHA,CtEwHH,CqElBU,CCtGJ,ADsGK,WrEkBO,CAAC,OsExHW,EAAE,WtEwHO,EAAE,CAAA,OAEjD,AAAL,E+DtEM,CMmDC,ArEmBO,CAAV,AsEzHe,APmDA,C/DsEd,CAAoB,CsEzHH,CtE6Hf,CoBpBa,AkDzGI,ADyGd,ANnDE,CMmDD,ArEgBU,AoBhBA,A2CnDR,A/DuED,CqEpBA,CAAC,ArEoBF,AoBlBG,CpBckB,CAAC,EAAE,CAAC,CsEzHK,CAAC,EtE6HnB,CAAC,EAAQ,AsE7He,ClD2GpB,CkD3GsB,AlD2GrB,GkD3GwB,AtE6HrB,EsE7HuB,MtE6HT,CAAE,GAHtC,CqEnBO,CrEmBL,AAIb,CsE9HqE,AtE8HpE,CADuD,A+DtEpD,A3DmGA,AJ3BJ,CAFyD,AoBhBxD,AiDFE,ANnDA,AOxDoE,CtE6Hd,IsE7HmB,AtE+HtE,EsE/HwE,A5DuKtE,CNTC,CkEzJG,QAL4E,CAAC,CAAC,CAAC,OtEgIzF,EqEpBM,ErEoBA,EAAO,IAAI,CAAC,CI+BE,A2DtGG,EAAE,CrD8GK,A4DjKJ,ADsGA,GrEoBD,CqEpBK,A3D2DU,C2D3DT,ArEoBJ,CqEpBK,ArEoBL,AAE3B,CqErBK,CCvG6B,CAAC,AtE4H/B,CsE5HgC,AAC3B,ADsGA,ANnDA,CrD8GD,A2D3DE,ArEqBA,CsE3HK,AtE2HJ,AACT,IAAM,CoBnBG,AkDxGI,ClDwGH,ApBmBkD,EsE3H5C,AAAoD,CAAnD,CDsGC,CAAC,CAAC,CAAC,ACtGoD,CDsGnD,CCtGqD,QtE2HlD,EsE3H4D,CAAC,AtE2HN,CsE3HO,AtE2HP,CsE3HQ,CtE2H5D,CsE3HO,EAAO,GAAF,EAAE,WtE2HE,CAAC,EsE3HQ,GtE2HH,CAAC,IAAI,CACjD,EAAoB,AAAgC,OU8CnB,EAAE,CAAA,OV9CkC,CAAA,KU8ClC,gBV9CC,CAAC,KAAK,CAAC,IAAI,CAErD,GAAI,CqEtBO,ENnDE,A/DyEc,EsE5HZ,APmDoB,A/D0EjC,CsE7Hc,APmDoB,C3CqDvB,AiDFI,ANnDA,CMmDC,ANnDoB,I/D0E7B,EAAK,MAD8B,EAAE,CAAC,EACtB,EAAE,EAAE,EAAI,AAAsC,CAAC,CAAA,GAAtC,MAAM,IAAI,CAAC,WAAW,EAAA,CAAE,CAAE,AAAD,MAAO,CAIpE,C+D1EK,GAAG,G/D0ED,CACT,CAAC,CqEvBU,ArEwBX,EsE9HMkD,APoDF,EMkDW,ACrGT,CPkDG,AMmDO,ArEwBX,A+D1EE,C/D0ED,C+D1EG,6B/D0E2B,CAClC,mBAAiB,QACjB,CAAM,AsE/HoD,StEgI1D,CoBzB4D,ApByBrD,CoBzBsD,AkDvGY,AlDuGN,EpB+BnE,CqE/BK,GrE+BC,EAAO,GAAS,OAAO,CsErIK,CAAC,AtEqIJ,CAEzB,CoB/BD,A2CpDM,AMmDA,CrEgCQ,CsEtIK,EDsGE,A7D+EF,CR/CD,CQ+CE,A6D/EG,CAAC,CrEgCH,CAAC,EAAO,GsEtIE,AtEsIC,CAAJ,AsEtII,AtEsIA,AAAC,CsEtIK,EAAE,AtEsIE,CsEtID,CtEsIH,AAAU,CAAT,AsEtII,EtEsII,EAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAmB,CAAC,CAAC,CAAA,AAEtF,CoBhCC,EpBgCG,CAAC,GAA4B,CAAC,AsEvII,GtEuIzB,EAAW,CsEvIJ,GtEuIQ,EAAU,CAAC,CAAhB,CAA2B,CsEvIK,CAAC,CtEuIH,CAAC,CsEvIJ,CAAC,CAAC,CAAC,AtEuIJ,IAAa,CAAC,CAC7D,CAD+D,CAAC,CsEvIK,EAAE,EtEwIhE,EAIT,CsE5I8E,CDgHxE,CN5Dc,AvDkIJ,AR9CF,AsExIkE,CtEwIlE,AAIR,EAAc,MAAM,CsE5IgE,CAAC,AtE4I5D,CsE5I6D,C9DyLzD,CAAC,C8DrLG,A9DqLH,C6DzEI,CAACC,OrE4BG,CAAC,CAC3C,AqE7B8C,CAAC,GAAG,CAAC,CAAC,CAAC,CrE6B5C,GqE5BS,AAAE,EADuC,AACvC,EADyC,CAAC,UrE6BtC,CAAC,CsExIO,WAAW,IAAI,ItEwIF,EAAE,EAAE,IsExIU,StEwIG,EAAK,CsExII,CtEwIgB,CACvF,E+DrFQ,COnDC,UAD+E,CAAC,CtEyIzE,CsEzI2E,CtEyIzE,E+DrFQ,COnDC,AtE2IvB,CsE3IwB,APmDA,C/DwFf,EqE7BM,IrE6BA,EAAkB,YAAY,CAAC,CAClD,MAAO,CsEzIO,CtEyIK,EsEzIF,ElEuKA,CJ9BO,CACxB,CI6B8B,AkEtKvB,ClEsKwB,AkEtKvB,ClEsKuB,IJ7BvB,CoBnCG,CAAC,ApBmCQ,CoBnCP,CkDvG6B,CAAC,GtE0IvB,CACpB,EsE3IiD,CAAC,CtE2I7C,EAAY,EsEzIQ,AAF8B,CtE2InC,AsE3IoC,CAAC,AtE4IzD,CsE5I0D,EAAE,CtE4IvD,CI8BG,CAAA,SkE1KgE,CAAC,ItE4I1C,CAC/B,EoBnCM,AhBgE8B,EJ7B/B,CsE7I8E,CtE6IlE,CsE7IoE,KDgI5D,CAAC,CrEaD,CACzB,E+DtFQ,EOxDyF,APwDzF,COxD0F,CtE8IjF,OqEdwB,ErEcf,AsE9IkF,CAK3E,AD4HF,ArEc/B,AsE/I6G,CDiI7E,ACjI8E,CDgIhE,AC1HtC,GD2H4B,KrEczB,EqEf6C,AC3HX,AtE0ItB,EqEfmC,CNvE1B,AMwEc,CAAC,ENxEZ,G/DsFH,CsEzIO,AtE0IvC,CsE1IwC,CADiB,CACf,CAChC,CD0HgD,CC5HG,AD4HF,CAAC,CC5HG,AD4HF,ArEepD,EAAY,KsE1IiC,CAAC,CtE0I3B,CAC5B,EsE3I2D,EAAE,MtE2IlD,EAAY,CoBpCP,AiDuBU,CjDvBT,AiDuBEC,CjDvBD,CAD4C,CAAC,CAAC,GpBqC1C,AAAU,CAChC,EqEdqC,KAAK,GrEc1C,EAAuB,CqEbK,EC5HI,CAAC,CD2HmB,AC3HlB,ED2HoB,ErEctB,CAChC,CuEzMwC,AACjC,CADkC,AF2LF,CAAC,CAAC,EE3LI,EvEyMpC,CsEzIO,CAAC,AtEyII,CuEzM6B,KDgE3B,CtEyIK,CsEzIH,CtEyIL,CsEzIiB,EAAE,CChEuB,GvE0M9D,EqEbQ,ArEeR,CsE3IS,ID4HI,AE3LA,AvEwMN,CqEbO,CC5HC,AADqC,AtE4I5C,CAAC,AsE3IO,CADsC,CtE4IjC,CuExMH,CAAC,CAAC,CAAC,AD4DsC,EC9DnC,AAED,AD4DsC,CtE4IjC,EAAE,EAAG,EAAO,GsE5I+B,CAAC,CAAC,CtE4I3B,CAAA,AAAC,GAAS,IAAU,CAAL,CAAiB,OqEfxB,ArEe+B,CqEf9B,ArEe+B,CAAT,AAAU,AqEf/B,MrEkB1D,GoBrCK,AkDrGI,EAAA,atE0IM,CAAC,MsE1IU,EAAE,GtE0ID,CAAC,EsE1IM,CAAC,CAAC,etE0IW,CAAE,CAAE,SAAS,EAAE,CAAK,CAAE,CAAC,CAAA,AAEtE,CAFmE,EAEnE,iBAAiB,CAAC,GoBtCG,AkDrGI,ClDqGH,CkDrGK,YAAY,EAAE,GtE2ID,CACtC,CACE,GAAA,AuE5M6C,CAAC,CAAC,AvE4MrC,GsE7IwC,EAAE,EtE6InC,CAAC,EsE7IuC,EAAE,AtE6IrC,CAAC,QAAQ,CsE7IsC,AtE8IrE,CsE9IsE,CAAC,EtE8InE,CAAE,EAAO,CuE1MF,EAAO,CAAJ,AvE0MF,GAAQ,CAAC,IAAI,CAAC,KuE1MO,EAAE,CvE0MD,CAAC,IAAI,CuE1MG,AvE2M1C,CuE3M2C,CnDoKvC,AmDnKE,EADwC,CvE2MxC,AuE3MyC,CAAC,CvE2MnC,CuE1MK,MvE0ME,CAAC,IAAI,CAAC,CsE5IK,AC9DA,CAAC,MvE0ME,CAAC,CuE1MK,CAAC,GvE0MD,EAAE,CAAC,CAAC,CAAC,CAC7C,KAAM,EsE5IM,GAAG,atE8IjB,EsE7IO,AE7FA,IxE0OD,CsE7IM,GtE6IF,CAAC,EAAW,CAAC,CAAC,CAAmB,CAC5C,CAAA,AsE9IiC,AtEgJ9B,CoB3CsB,AkDrGS,AE5F1B,CF4F2B,AE5F1B,AF6FA,CAAC,AtE+IC,OAAO,OAAQ,CoB1CC,ApB0CA,AAC1B,CsEhJ+B,AlDqGJ,AoDjMpB,CF4FyB,AE7FA,EAAE,AxE6O5B,CsE/IO,CE7FC,AxE4OG,EAAO,CsEhJe,CAAC,CACZ,AAAK,CtE+IV,AsE/IM,AAAK,CtE+IL,CAAC,GAAG,CAAA,AAAc,IAC7C,CADkD,CAAC,EAAE,AAC/C,CsE/IS,CtE+IC,EAAkB,CsE/IP,CAAC,ItE+IY,CsE/IP,AtE+IQ,CsE/IP,OtE+ID,SAAyB,CAAC,SAChD,EAAK,CwE5OQ,AxE4OR,CwE5OS,CxE4OT,GACT,CoB1CO,CAAC,ApB0CF,CAAC,CsE/IO,AtE+IN,CAAH,EAAM,GAGlB,IsElJmC,EAAE,AtEkJ9B,CACL,CwE9Oe,AACJ,CpDiMC,AoDjMA,CpDiMC,EpB4CP,CsEhJW,AtEiJf,CwE9OgB,EAAE,ACQF,AzEsOb,EsEhJc,AtEgJR,AwE/Oc,AF8FH,AlDqGJ,CoDlMK,ApDkMJ,AqDzLD,AHqFE,AtEgJR,AsEpJoC,CE3FrB,AxEgPzB,CyEtOsB,AHiF0B,AlDyGhC,ApB2CR,AsEhJgB,CAAC,AGrFF,AADD,CACE,AADD,ADRE,CAAC,ACSD,AADD,CAAC,AACC,CADA,AHqFE,AAHyB,EAAE,AAIxB,CAAC,CADA,IE7FI,CxE+OpB,AwE/OqB,ExE+Of,CAAC,AsErJ0C,CAAC,AtEqJ1C,CsErJ2C,AtEqJ9C,AwE/OqB,CAAC,CxE+OhB,CsEjJmB,AtEiJlB,AwE/OiB,CAAC,AAEL,AF4FM,CE9FA,AAEL,CAAC,CF2FM,CtEkJhB,AsElJiB,CtEkJhB,GAAG,CAAC,CAAC,EsEjJoB,CAAC,CAAC,CAAC,AtEiJlB,CAAC,AsElJiB,CtEkJhB,AsElJiB,CtEkJhB,CsElJkB,AtEkJjB,CAAC,IAAI,CAAC,EAAE,CAAC,CACzD,IyErOgB,CHqFC,EAAE,AtEgJZ,CAAE,CyErOa,CzEqOP,AyErOQ,CzEqOP,AyErOQ,CzEqOP,AyErOQ,CzEqOX,AyErOY,CHqFK,CtEgJX,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EsEhJc,EAAE,CtEgJX,CAAC,CAAC,CAAE,CAAC,CsEhJa,AtEgJZ,CAAC,IAAI,CAAC,GAAG,CAAkB,AsEhJL,CAAC,AtEiJlE,CsEjJmE,EtEiJhE,CAAE,CyErOa,CzEqOP,CAAC,CAAC,CAAH,EAAM,CyErOa,AzEsO7B,CyEtO8B,MACX,AzEqOZ,CAAE,EAAM,CAAC,CyErOS,AzEqOR,CyErOa,AAAJ,AzEqOZ,CyErOiB,CAAC,IzEqOR,EAAI,EAAY,OAAO,CAC/C,CADuC,IyEpOxB,ArD2LkB,UpB0CjB,EoB1CsC,AqD3L1B,AzEqON,CAAC,AyErOM,CrD2L2B,ApB0ChC,EyErOY,CzEqOT,CAC3B,CyEtOuC,CDPzB,CCO2B,CDPzB,CCO2B,CrD8LzB,EpBwCV,CAAE,EAAK,CAAE,CwE7OS,AxE6OR,CAAH,EAAM,CACrB,EyErOc,CAAC,GAAG,AHqFA,CGrFC,CHqFC,CtEgJX,CAAA,EAAQ,CAAC,CAAC,GAAG,EoBxCqB,QpB0C7C,CoBxCW,AkDxGA,WtEiJA,EAAM,CAAC,CAAC,CyErOO,AzEqOV,AAAI,CyErOW,GAAG,CAAC,CAAC,CzEsOpC,CoBxCW,AoDtM2B,CxEgP1C,AwEhP2C,CCQC,ADRA,CCQC,CzE0O7C,CyEtOO,CAAC,CAJyC,AAIxC,AzEsOL,CAAC,AACH,CyE3OiD,CAAC,AAIvCE,CAJwC,EAKxC,CzEsOL,CyEvOQ,ArD+LC,CpBwCJ,IyEvOQ,CAAC,CAAC,CrD8LG,GqD9LC,CzEuOH,CAAA,CyEvOM,EzEyO5B,CyEvOSA,CAFuB,CDNrB,ACQOA,GAAN,EAF0B,ADNtB,CCMuB,EAEtB,CAACA,CAFyB,KAAK,CAAC,AzEyOjC,CAAC,CwE/OS,QxE+OA,CAAC,CACzB,GoBzCa,CpByCT,CAAA,IyExOmC,IrD8LQ,ApB2C/C,CwE/OW,ACQA,CAAC,AAFiC,CAAC,AAEjC,CAFkC,CAAC,AHuFjC,AtEkJV,CsElJW,AtEkJT,GyEzO6CA,ErDgM9B,GqDhMiC,CAAC,CAAC,SzEyO/B,CAC1B,GoBzCa,EkDzGE,GE9F8B,GxEgPjC,AwEhPoC,GxEgP3B,CwEhP+B,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CxEgP7B,CoBzCkB,CoDvMc,ApDuMb,ApByCjB,CoBzCkB,CpB2CnE,CAAE,CsEjJK,AEjG4E,CpD6M3E,AqDjMA,ADZ4E,CCY3E,CAAC,EzEsOD,AwElP+E,EAAE,ACY3E,AzEsOC,CyEtOA,AzEsOC,AAYf,CyElPoB,AAUX,CzE4NG,AoBrCY,AkD5GR,AGrFK,AAUX,CH2EO,EGrFO,AAUX,CzE8Nb,CoBvC0C,AqDjMhB,GHuFd,ClDiHC,AkDjHA,EtEiJN,CAAC,KAAK,CAAC,uBwEpPsH,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,YxEoPlF,GAErE,CyEvOgB,CAAC,AzEqOyD,CAAC,AyErO7C,CzEqO6C,AyErOxD,MAAM,EHqFL,CAAC,AGrFO,EAAE,IzEuOd,CAAC,SAAS,CAAC,CACzB,CoBjCW,IpBiCL,CwE/OW,CAAC,AF6FA,CE7FC,AF6FA,AGrFA,CAAC,CAAC,EzEuOR,CyEvOW,AzEwOxB,CyExOyB,CAAC,GHsFX,AtEkJV,CsElJW,AtEkJT,kBACP,CyEvOW,EAAE,GAAG,AHqFA,CAAC,GtEkJP,CAAE,EyEvOY,CzEuOH,CyEvOW,EAAE,CAAL,CAAO,AzEuOhB,KyEvOqB,EAAE,EAAE,QzEuOF,EAAE,GAI/C,CwEhPS,ECQE,CDRC,ACQA,CAAC,CzEwOP,CsEnJS,AGrFA,CzEwOS,CyExOS,CAAf,CAAC,CAAiB,ADRhB,ACQA,CDRC,ACQA,CAAiB,CAAC,CAAf,EAAE,AzEwOQ,CyExOP,AAAgB,CAAC,AzEwOR,CAAC,CyExOP,CAAC,AzEwOR,CyExOyB,EzEwON,CAAC,GyExOW,CAAC,CAAC,CAAC,CzEwOP,CAAC,CyExOS,EAAE,CAAC,CzEwOP,CAAC,CACnD,AADmD,CsElJ1C,AtEoJjB,CyEzOkB,AHsFX,AtEmJN,CwEhPO,ACOW,EzEwON,CyExOS,AzEwOT,CyEvOD,CADY,CzEyOd,CyEzOgB,AACV,AzEwOL,AsEnJK,AtEoJd,CyE1OyB,AHsFV,AGpFD,CACJ,CAFO,AAEK,CAFJ,AACD,AACL,CAHiB,AACV,AACD,CAFY,AAEX,ADRA,AF8FL,CAAC,AE9FK,ACSL,CAHiB,AACV,ADPD,ACSL,CAFO,AAEN,AADK,CAAC,GACF,AAFM,CAEL,AADK,CADE,CACA,AADC,CACA,CACR,CzEuON,IAAI,EACtB,AADwB,CsEjJjB,AtEkJN,AACH,AAF0B,CwE9OhB,AxEgPT,AAED,CwEjPM,CADM,AAEN,CCOE,CADM,AHsFL,AGpFD,CHqFC,CGvFO,CDPJ,AxEiPL,CsErJW,AtEsJpB,CyE1OgB,AADK,AHqFA,AE3FN,AxEiPd,CwElPgB,ACOK,AAEN,AzE0OhB,CyE3OkB,AzEyOL,AyE1OU,CDNL,AxEgPL,AyExOK,AHsFZ,AE7FA,AACF,ECKiB,AHwFf,CEhGgB,ACSD,AAFM,CDPJ,AACD,ACSZ,CHqFC,AE/Fa,AF6FA,AE5FD,CF4FE,AE7FA,ACOK,CDPJ,ACQA,ADNb,ACKkB,AHyFpB,AE7FA,CCKgB,AACD,AAFM,CAAC,AAEN,AACZ,ADRA,CCMc,AAGf,CAAC,AAFc,CADE,AAGf,CAFe,AACZ,AHoFY,AE7FA,ACUd,CAHgB,AAEb,ADTY,AF6FA,AE3Fd,CCMe,ADNd,CCKgB,AAGf,CAHgB,AAEb,AACF,AAFc,CACX,AACF,AAHe,AACD,CHsFX,AGtFY,CACX,ADTY,AF8FZ,AtEoJJ,CyE3OkB,ADPD,ACSZ,ADPF,AF6FA,CGxFgB,ADPD,ACQA,ADNd,ACQA,CAHgB,AACD,AHuFd,AtEoJzB,CyE3OwC,AACZ,AACF,CAAC,CADG,ADNvB,CCIqC,ADLf,AF8FrB,AtEmJF,CwEjPwB,ACMc,AADC,AAEb,CDPD,ACSnB,AAFqB,AzE0OJ,AyE5OiB,CAIjC,CAHkC,AAGjC,CAHkC,AAGjC,AHqFA,AtEmJc,CyE1OQ,AADY,CAAC,CACX,AAErB,CHqFC,AGrFA,CAFsB,AHuFrB,EGrFE,CAAC,CAAC,IAAI,EzEwOF,AAAkB,AyExOd,CAAC,AzEwOc,KAAK,CAAC,WAA6B,CAAA,AAEhF,CsEpJK,GE7FG,CCQC,CzEyOF,CACL,KsEpJW,CE9FK,CAAC,AxEkPV,CwElPW,AxEkPT,GAAA,eAAe,CAAC,KAAK,CAAC,SwElPqB,GAAG,IAAI,CAAC,AxEkPZ,EAAE,OwElPmB,CAAC,KAAK,AxEkPZ,CwElPa,CxEkPT,CwElPW,CxEkPT,CACrE,OsEpJa,KAAK,CAAC,CtEoJL,CACZ,GAAA,QwEpPwG,GAAG,MAAM,AxEoPhG,CAAC,AwEpPgG,IAAI,CAAC,AxEoPhG,CAAC,GwEpPmG,CAAC,QAAQ,CAAC,EAAE,MxEoP1F,EAAE,CAAC,EAAqB,GwEpPgF,AxEoPhF,CwEpPiF,CAAC,CxEoPlF,AwEpPmF,YxEoPpF,QAChD,CAAC,aAAa,CAAC,aAAa,CAEtD,CwElPG,AxEkPF,CACD,CwElPG,CCOG,CDRC,CAAC,CxEmPH,CAAC,CyE3OK,ADPF,CCQC,GADK,CDRC,ACQA,EACA,CADG,ADPF,CADG,ACQA,EDRE,ACQA,CAAC,ADRA,AACF,ACQA,AzE0OF,EwElPI,CCOG,AACF,ADRA,AxEmPtB,CwEpPyB,AEvDpB,CD+DqB,ADRA,ECQE,AAEpB,AzE0OF,CwEnPqB,ACOE,CDPD,AxEmPf,C0E3SK,AD+Da,CAEjB,AzE0OJ,AwEpPsB,ACUb,ACjEA,CD+Dc,AACF,CACf,AADgB,AzE2Of,CwEpPkB,AxEoPjB,AyE3Oe,CDRC,ACQA,CAAC,AACX,ACjEA,CDiEC,CDTY,AADE,EAAE,CxEoPhB,EAAE,AyE1OI,ADTW,CxEmPf,AAEvB,CwErPwC,CExDV,CDiEC,AzE6OjC,C0E9SkC,A1E6S5B,AwElPC,CCM4B,ADN3B,AEzDA,C1E2SA,CAAC,CyE3OK,CzE4OR,CyE7OkC,CC/D1B,AD+D2B,AACxB,ADPH,ACQA,AzE2OJ,CyE7OgC,CzE6OhC,C0E7SU,CAAC,CDiEC,CAAC,CCjEC,EAAE,CAAC,ADiEA,CzE4OL,CyE5OO,AzE4ON,C0E5SO,C1E4SL,C0E7SO,AF0DA,AxEmPN,AAE9B,CyE9OqC,AzE4OP,AAE7B,CwErPqC,AE1DA,CDiEC,AChEA,CF2DjC,CE5DmC,AACA,AF2DlC,EE5DoC,CDiEC,AChEA,ADmElC,ACjEA,CD8DmC,CAAC,AChEA,CF2DjC,CAFmC,ACUlC,CCpEmC,CF0DC,AAElC,CE5DmC,ADoElC,ACjEA,CAFmC,ADmElC,CAAC,CCnEmC,CDmEjC,CCpEmC,AF4DlC,CAAC,AEzDA,CDiEC,ACjEA,CAFmC,ADmElC,CCnEmC,ADmElC,CCpEmC,AACA,ADmElC","ignoreList":[0,20,22,23,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82]}